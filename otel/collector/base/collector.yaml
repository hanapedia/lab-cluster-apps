apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
spec:
  mode: deployment # This configuration is omittable.
  config: |
    exporters:
      logging: {}
      otlp:
        endpoint: tempo-distributor.monitoring.svc.cluster.local:4317
        tls:
          insecure: true
    extensions:
      # The health_check extension is mandatory for this chart.
      # Without the health_check extension the collector will fail the readiness and liveliness probes.
      # The health_check extension can be modified, but should never be removed.
      health_check: {}
      memory_ballast: {}
    processors:
      batch: {}
      # If set to null, will be overridden with values based on k8s resource limits
      memory_limiter: null
    receivers:
      # jaeger:
      #   protocols:
      #     grpc:
      #       endpoint: ${env:MY_POD_IP}:14250
      #     thrift_http:
      #       endpoint: ${env:MY_POD_IP}:14268
      #     thrift_compact:
      #       endpoint: ${env:MY_POD_IP}:6831
      otlp:
        protocols:
          grpc:
            # endpoint: ${env:MY_POD_IP}:4317
          # http:
          #   endpoint: ${env:MY_POD_IP}:4318
      # prometheus:
      #   config:
      #     scrape_configs:
      #       - job_name: opentelemetry-collector
      #         scrape_interval: 10s
      #         static_configs:
      #           - targets:
      #               - ${env:MY_POD_IP}:8888
      # zipkin:
      #   endpoint: ${env:MY_POD_IP}:9411
    service:
      telemetry:
        metrics:
          # address: ${env:MY_POD_IP}:8888
      extensions:
        - health_check
        - memory_ballast
      pipelines:
        # logs:
        #   exporters:
        #     - logging
        #   processors:
        #     - memory_limiter
        #     - batch
        #   receivers:
        #     - otlp
        # metrics:
        #   exporters:
        #     - logging
        #   processors:
        #     - memory_limiter
        #     - batch
        #   receivers:
        #     - otlp
        #     - prometheus
        traces:
          exporters:
            - otlp
          processors:
            - batch
          receivers:
            - otlp
