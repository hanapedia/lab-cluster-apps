---
# Source: chaos-mesh/templates/chaos-daemon-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-daemon
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ServiceAccount for component chaos-dashboard
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-controller-manager
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-dns-server
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
---
# Source: chaos-mesh/templates/secrets-configuration.yaml
kind: Secret
apiVersion: v1
metadata:
  name: chaos-mesh-chaosd-client-certs
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaosd-client-cert
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9CeUN4YzNCUHN0NlFlQnlpRVhpQzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlkyaGhiM05rTFdOaE1CNFhEVEkwTURjeU5qQTNNRFl6T0ZvWERUSTVNRGN5TlRBMwpNRFl6T0Zvd0ZERVNNQkFHQTFVRUF4TUpZMmhoYjNOa0xXTmhNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEyRkdzbDFlazV4R0hOOE96NG5tdzd1Z2VqYXo5WHo0dHJUWFVZdzFvWnhwR3V2K04KK2gvMERIWUpzMVBrZEFqUThvN3B4TWxHZVBxdjUrbUlPeTAzejRZTXJRWFRubno3NU90aDZ0YUViNlJrZktCOQp0bVRDRmsxcEJNVHUwc3NLOGhqeWM5SEs5OURFVWtxVXRKR3J1b0V4cTFMcVZ3NHhWSlVUSVdHMzVsQ2V6cDBNCnNnS0xCbWhuSXNPUVJHeXBqQS90b1RwaVlHSVJiQlN1MERUbTJZNlU3VkdtRVlVR2t6MjZFNTZFUmhkZTdHRisKVlpGaHhkMlNjRk55dS8zR3Qrc1RySHAxNU5MWXB5Nk1CMzNJbWRPTVhXdkZXU1FVZzBnakhRaVJlcDJQRUFHOAo1NTQwSSt4VFNVakRLQmRPOFlIUUJTWFZid2dFTVovWDl2ZXE0UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWc1WThzYnM1akNKWUt3MWQ3NWRKaGRKTFhZTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVZ4Z0hkTnlzVnJJanNFZUJGa1dPdG9xRVk5K3Q1alI4UUp1anh3RDRLVGFWeE1La2t3V25BCnZYRHVKcU44S0xFbStZTVVaMWRLdzV6dy9UU3ZoM3M0VXhUMnlFd3kyWnBWQ3BNQTYyTVhHRDQ2aWlseHZPREwKZ2pLZi9uZ3JocFdBREQyczdHdHJIWUMvK25SSEhJcUV5U1d0SGo3MWF3cDBBTGM3UERUK2JybWdZWXRPV1hSUApJMnp3bTNuVUxBbkI0UG5FZWZGTHdDbWFuU0FIVVRudURkNzFFSHFkWUtPUHI1cG9JN1Ywd2c3NUJRbEJkcmZ4CkQrNDRnTUo3Vk9iZkRIWmovNWJ4MktRemJRNVRhMmhQcXpoZ1F5cFdKSUt4b3VKaHN0RlgzeWxiL3oyYVhnb1MKdk1veENua0xhQm9YSlNOR3ZiRGgybFYwU1hlNG1vNnUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMkZHc2wxZWs1eEdITjhPejRubXc3dWdlamF6OVh6NHRyVFhVWXcxb1p4cEd1ditOCitoLzBESFlKczFQa2RBalE4bzdweE1sR2VQcXY1K21JT3kwM3o0WU1yUVhUbm56NzVPdGg2dGFFYjZSa2ZLQjkKdG1UQ0ZrMXBCTVR1MHNzSzhoanljOUhLOTlERVVrcVV0SkdydW9FeHExTHFWdzR4VkpVVElXRzM1bENlenAwTQpzZ0tMQm1obklzT1FSR3lwakEvdG9UcGlZR0lSYkJTdTBEVG0yWTZVN1ZHbUVZVUdrejI2RTU2RVJoZGU3R0YrClZaRmh4ZDJTY0ZOeXUvM0d0K3NUckhwMTVOTFlweTZNQjMzSW1kT01YV3ZGV1NRVWcwZ2pIUWlSZXAyUEVBRzgKNTU0MEkreFRTVWpES0JkTzhZSFFCU1hWYndnRU1aL1g5dmVxNFFJREFRQUJBb0lCQUNKVmhGRlpKZUZQRk9reQo5TUJEbEdPM0QvSm92S1o3VmdDaUJKM2NLUEFFYWFtUW1sWlM4QWR5VE1QYjB1emY0Vm8rZUxnMVFpdzlqZUgvClhSSVhjVDVOQm9JSDVMakpHYW9SK2k2dDhjTk9rbXg5aExhSWM0M2FwNHFNUDJQUnVtRUd1S1ROYmF1N3hRMVMKclJ1ajYxL2sxWjlkdjdnbGxvcllSbnNMNllaeWhucGpabkgzc2NWQkFnSUpOdllKRWpUUnBWaS95WndZa3dsVwoxb1F6WS9JNXVEdlhsQXRvMnhVRDMyNC9Iaml0OWUwMWhDVGw0eERVWDcxSVMxYUlCSkxFZncvbFRDSEU2ZW5WCkJSZzNOMVc1SlBablc4TkJVUE9FVmZ2SVdPNzJOeFZxOHpVdXB6VkxtdmljYWhVOVdOV2Y4VEozRzBxN0JoREMKV09zT0NJa0NnWUVBMnBiTC9TZGFCTmlIV0szMEFnOUtIdFJhRDU0bVpHb3BucEJIY2dZVnQvZDU2YW5zN0VOTQpXZzI5SkY1RXppaU93YW5oeWIvN2dnMnczTVF4ZWhnTzlWa254bXVYSlRlU3p5aWwrWktFWnNiQ3BDS2YvaC9JCjdwNVNVbWQvMnlNVXRuL2RDVUlKckdKQmlsc1cwaTJGa3RvRnZyQTdZWWMwRDNHeFJPRlZjMGNDZ1lFQS9WZHIKY29xT2NYdWhMM1ZGMitXdzRrajNVOWFOMnV0SjhZNXR6UWdYL2tNT0QrSGtBODloYXNQWG1Oc0tXdW5NTGlOMApOQnRGRGF5cnI4WTRHd2FXbGdvRzFteHdvUHJNRkZxVU52a3N4NzBaL3dlKzRNM1VoYzVpbTAwVUNrZ0FaMFBBClJsOUxyRlJIQWJuOGhPVzJwaDE0ZEU1RGMyclk2R2FKTDhWSDlKY0NnWUI5WnhHME5FVkNqbTVuZzdSL0VnSjEKMldHcG9CTnFmRFZRVUhtTWdzMG04NFV2ZGxzRDJFQVBVZDUyNU5ZWVo5QXVicVdvTnNtMWZPRkFaaFgwYzZUeApRS3ErL0s2RG5YUk9BSVhudmhUVFdhZ0V2aENIbS9pTVhLdmh0cHIxUHhUODlqSDZ3N1lFL1lHWVBGWEZVblJWCklWczJZS2hRZFY1NmxjRWJRU0xpdFFLQmdRQ0lhQVNEaE5VVGgyU1BZQTZBU3hsRmpkSVZ3eVZZSlc0SDhROXYKNFJiQ0lhcTFwSVFZQlJaSDNURDlyWnJTdnFYZ2hkaHdvZW81WmFwL2x6UG9ZVkM5Y3FLaDIzdDlRZXlXWFBzRwo2bjFSQXFHM3JwejQvL3FaSFRuOHNyRENwR2dMTWZDYU0zOVVSNENBRG50SHQwUDBCMVF2RTJEQUNWekhMVVphCmdWZXYrd0tCZ1FDdmlZNWtSaHZnb0R2bnpobDJMa1ZYR3FlSExHdWFQQWNJQzd1TDE2RzI3M2dtZXJVRHUyeHkKVVVYaHZYS3BsQ1VZSC82K2hzSkhFbmFKRmxCTm4vcENBV2FuOUIxMTFBdVRpWHJENGp4K1l4YUpleGZpM3haegoxZFFtREdFSjJVK0tzbTZzWXF0RFBtTEFlK0R1VVJ0YnUwcHNac25rTDFmUHRqOTB6bjNlZHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lSQU5yR05KV051NG1Obk1ZWEJKNXJwQUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlkyaGhiM05rTFdOaE1CNFhEVEkwTURjeU5qQTNNRFl6T1ZvWERUSTVNRGN5TlRBMwpNRFl6T1Zvd0xERXFNQ2dHQTFVRUF4TWhZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMbU5vWVc5ekxXMWxjMmd1CmIzSm5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXlTUnROZGNPWDhJeUNDeXgKa2RkUHY2Sk9MWHpMd3lCaEZ2T3A4ZVptbVV3Ym0rOXFZRnZHNTFZYzB4enRybDlMZnNkVE5qSW5sTmlGd0kycgpSaG9WVlE4RVhJM1AycUFwcmUwN0RFZnl6M1dOZjFaSkpBVkV5QjAxS3NmQ0wwL3hLZnhoTzh3ZHdrOVdEL095CjNoU0s1MExBeE1RZUFOSDBXYVgrM0VOSkV5YytjOWg1enZCSm5CS0g0OCttQzlaTlQ2UG5mS1R1ZW9yYnFzckwKcnEvcUlzSzZFbm02ZThwak94bjNETDdXMytYR05FcDgzYXJjSEp1ajIwS3VUM0MzZldTb2ZQdkJ1VUZVUlRpUQpZeXJWTVVlQjVaamNQZElNczdpc1p1QmFIYWRBaUlteVh5clFIRUxIdkJta2dyb0ZvQU04M1l1ZHIyVmVlR3luClVEdzliUUlEQVFBQm80R2FNSUdYTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVElPV1BMRzdPWQp3aVdDc05YZStYU1lYU1MxMkRBM0JnTlZIUkVFTURBdWdnbHNiMk5oYkdodmMzU0NJV052Ym5SeWIyeHNaWEl0CmJXRnVZV2RsY2k1amFHRnZjeTF0WlhOb0xtOXlaekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWU5laklGUGEKYk5HenU4ejVDK21CK1BuTkhkUHUyUUU4SFFTTi9uTDhkaDlhaCtmZmh2YnduV0o3U1E5anZad0V3WVJCZytNcApTNk5GNUliMXNPMFA0RVNQbzhvTEFXYTg0dFZWbm5CbzhPM21Da1IvMlZ2KzJTYU9KQlBVbms5NWhTVnRjUkVtCks3NWY5MEZmQkxzK2g2QTRKcEZzV28ycVd5Y2tnNVA0UmFQb3hJQkJoK0daUitFOURqN096Z0o3TFRlNUwvT1cKcmFVeUd0cGxHZFZ2djROMFpSQUJBS0dONU1Hcnl1TE4xODJnc2RHYVgrMmo0VzBIemxQVm9rMEpMcDhLc3VNSgptbkpMeU00TjMybkk4SVJCMGVnampkTWs3NU5aWUVLVWpIWUxvSkEraE83eWZvUDR3VkhGWER1bEY4LzY2cEg5ClVZbUhpMG82TkdGSWV3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeVNSdE5kY09YOEl5Q0N5eGtkZFB2NkpPTFh6THd5QmhGdk9wOGVabW1Vd2JtKzlxCllGdkc1MVljMHh6dHJsOUxmc2RUTmpJbmxOaUZ3STJyUmhvVlZROEVYSTNQMnFBcHJlMDdERWZ5ejNXTmYxWkoKSkFWRXlCMDFLc2ZDTDAveEtmeGhPOHdkd2s5V0QvT3kzaFNLNTBMQXhNUWVBTkgwV2FYKzNFTkpFeWMrYzloNQp6dkJKbkJLSDQ4K21DOVpOVDZQbmZLVHVlb3JicXNyTHJxL3FJc0s2RW5tNmU4cGpPeG4zREw3VzMrWEdORXA4CjNhcmNISnVqMjBLdVQzQzNmV1NvZlB2QnVVRlVSVGlRWXlyVk1VZUI1WmpjUGRJTXM3aXNadUJhSGFkQWlJbXkKWHlyUUhFTEh2Qm1rZ3JvRm9BTTgzWXVkcjJWZWVHeW5VRHc5YlFJREFRQUJBb0lCQUh5MVdnVE1ubnZla2xpaApKVU13QktEakI2ZUtQV2R3bHVHOUZ6d0V4czM2OHc4K1pHenoyaUdxTVZydkQ2cFNLU09rZjhJVlhKY2JtK25qCnJESmRqNlphRmpFd041UHNRNHN6ajYyd21pbm9UMStJNXZZdlVoTGtrUWRDTFBKYWxVS2IyTWxUWjR3RzFtd3oKZzAzUDNNTS9qdmN3UlEzckhwM0tubmFBUFRsaXZRQkVVQWlGbXFQN2JtYmFOV3I2V2NOeEcvbWZmZ3hUVnY2NQpPdmtFbEhVRTF4dEtyTzNtSlU5MTVST2ZkS09ERlZFaG9xZFNJNm5rSHRnbVZxZFQxeUl4VlMxQVhScVlhNUlPCko0cXZ1NzYyYTlRWXFiMTdmK1NQNEdReWhPbzh0dTZJeFc5RzkvaC95R0tEYi82bHpyaHRHTTJpbng2UWp4akMKeXg2Nis4RUNnWUVBNmdMNkw5eTdhSzNzU0NISFkzV0hFZExQakxZc0VqSUo2U3B5S2hTSzBIU1RFSUQ3ckpINwpKcnB3Ynk0UmZpMHEwcWtiYXhWQ2xidUZ1Z2IwcGlzUlI3WllOdDhveDlEdWE1dEk0U0NWRTloUnNEaEl5THRHCnBZaE03N1AyK1M4YTJiWU40U3RXQlRaa3FyeEc0dlE4L2tFQ0JGbVFxbVAxZ0tkaTlzd3k4NTBDZ1lFQTNBckwKa3pnNVcyeGJSUnJvSHQ2YytTOUJOdjNFVWp0MERnb2dRaE5RcUZjd2xuVnRDc3FDV0orUVc1QVlzaE1MY0ZBOQpFNDJ5Tng2bWUxQm9MRWhlblZ3bm9qSEZSdkVIRHZxdXYvNmtEZUYySUtSRXpsYUtzRTh6b2h4MGJPM2JsUzJnCktlK0FmOU94WE8wellXdDQrMCtWTWNVRm1YT0ZnUHJLWmNETlVCRUNnWUFWRXZ1US8rSG94WEQzOWdMTTFESzcKeWk1aXo2MGNYbUZDSEU1M3Q2M2dvLzd5aDRzaXVXclN6QXVBRjdmL2t2VytUdmhuSmx6K3V3cUovRUpnREpUYgp6bklYVHZXUE9TT2ZrVFo0LzhRdEsxZi85TEdwVWlSRW1BZkZ0b0ZSWTRxWmZLbTNVMzNGcm1aV2NlbzRXaUo4CkMwS3hQWmVub0tUbFZ5MjBhQ05XaVFLQmdFd2xORE42OW1aTHhmM1JCTmlCNHNKY2R1M252VU5UcmFLYUlIV2QKSjRGSnd0ZWVSU0RCMlg5L29EMy9USHg3R0s5Q0pSQ2FMVHpqejJyRzlYVzFpWUJjL3A0aktRaVdxZ0dtQUVrUwpmb1VMSzR5Nks5RlhvMkRGMTdGV3RYZG9qRjlBVGJlVldOdGpUM0kvNTFMa0ZSYXFnSStiaFllSHNZQmp5UnlUCkxybHhBb0dBVFJnYmh6cXpXWCswL3pOZjBvUzBXV3djZCs1RVp5d0dZQWZVYnRRQzg0UXB5eVVZUDIzeEVlUVYKMWdVUUdDRFMzU1pVRGdKUlp4Q3Qzck16VGI2QllpMHA5RmsyU2NJZTIvNVVNTFRnaVRGU3lxckd0WVRFc3gwMgptV0xXK0M5SGxuU2tCNGYvSXR0Yk95ZXdVS0VuV3hUbmZram5pM2dMM0phT2NZL0I3YXM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: chaos-mesh/templates/dns-configmap.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: dns-server-config
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dns-server
data:
  Corefile: |
    .:5353 {
        errors
        health {
            lameduck 5s
        }
        ready
        k8s_dns_chaos cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
            grpcport 9288
        }
        prometheus :9153
        forward . /etc/resolv.conf {
            max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRole for chaos-dashboard at cluster scope
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
rules:
  # chaos-dashboard could list namespace for selector hints
  - apiGroups: [ "" ]
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  # chaos-dashboard use subjectaccessreviews to authorize the requests
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRole for chaos-dashboard in target namespace
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
rules:
  # chaos dashboard could list pods for selector hints
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  # chaos dashboard could record evnets from chaos experiments
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
  # chaos dashboard could record and manipulate all the Chaos Mesh resources in target namespace
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# roles
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "configmaps", "secrets"]
    verbs: [ "get", "list", "watch", "delete", "update", "patch" ]
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - "create"
  - apiGroups:
      - ""
    resources:
      - "pods/log"
    verbs:
      - "get"
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - patch
      - create
      - watch
      - list
      - get
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources:
      - nodes
      - persistentvolumes
      - persistentvolumeclaims
      - namespaces
      - services
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# roles
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "*" ]
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources:
      - namespaces
      - services
      - endpoints
      - pods
    verbs: [ "get", "list", "watch" ]
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRoleBinding for chaos-dashboard at cluster scope
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dashboard-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-dashboard
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# binding ClusterRole to ServiceAccount for componnet chaos dashboard
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-target-namespace
  # TODO: notice that the targetNamespace is still defined as .Values.controllerManager.targetNamespace, .Values.targetNamespace would be better.
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dashboard-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-dashboard
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# bindings cluster level
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-controller-manager-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-target-namespace
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-controller-manager-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# bindings cluster level
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dns-server-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-target-namespace
  namespace: 
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dns-server-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources: [ "services", "endpoints", "secrets" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
  - apiGroups: [ "" ]
    resources: [ "pods/exec" ]
    verbs: [ "create" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "*" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get", "list" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# binding for control plane namespace
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaos-mesh-chaos-controller-manager-control-plane
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# binding for control plane namespace
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaos-mesh-chaos-dns-server-control-plane
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/chaos-daemon-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "31766"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-daemon
spec:
  clusterIP: None
  ports:
    - name: grpc
      port: 31767
      targetPort: grpc
      protocol: TCP
    - name: http
      port: 31766
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-daemon
---
# Source: chaos-mesh/templates/chaos-dashboard-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dashboard
    helm.sh/chart: chaos-mesh-2.6.3
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2334"
spec:
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dashboard
  type: NodePort
  ports:
    - protocol: TCP
      port: 2333
      targetPort: 2333
      name: http
    - protocol: TCP
      port: 2334
      targetPort: 2334
      name: metric
---
# Source: chaos-mesh/templates/controller-manager-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-mesh-controller-manager
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "10080"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: webhook
      protocol: TCP
      name: webhook
    - port: 10081
      targetPort: pprof
      protocol: TCP
      name: pprof
    - port: 10082
      targetPort: ctrl
      protocol: TCP
      name: ctrl
    - port: 10080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: controller-manager
---
# Source: chaos-mesh/templates/dns-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: chaos-mesh-dns-server
  namespace: "chaos-mesh"
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: dns-server
spec:
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dns-server
  ports:
  - name: dns
    port: 53
    targetPort: 5353
    protocol: UDP
  - name: dns-tcp
    port: 53
    targetPort: 5353
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  - name: grpc
    port: 9288
    protocol: TCP
---
# Source: chaos-mesh/templates/chaos-daemon-daemonset.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  labels:
    app.kubernetes.io/component: chaos-daemon
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-daemon
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.3
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.3
        app.kubernetes.io/component: chaos-daemon
      annotations:
        rollme: "SeEMo"
    spec:
      serviceAccountName: chaos-daemon
      hostPID: true
      containers:
        - name: chaos-daemon
          image: ghcr.io/chaos-mesh/chaos-daemon:v2.6.3
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/chaos-daemon
            - --runtime
            - containerd
            - --http-port
            - !!str 31766
            - --grpc-port
            - !!str 31767
            - --pprof
            - --ca
            - /etc/chaos-daemon/cert/ca.crt
            - --cert
            - /etc/chaos-daemon/cert/tls.crt
            - --key
            - /etc/chaos-daemon/cert/tls.key
            - --runtime-socket-path
            - /host-run/containerd.sock
          env:
            - name: TZ
              value: UTC
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          volumeMounts:
            - name: socket-path
              mountPath: /host-run
            - name: sys-path
              mountPath: /host-sys
            - name: lib-modules
              mountPath: /lib/modules
            - name: chaos-daemon-cert
              mountPath: /etc/chaos-daemon/cert
              readOnly: true
          ports:
            - name: grpc
              containerPort: 31767
            - name: http
              containerPort: 31766
      volumes:
        - name: socket-path
          hostPath: 
            path: /run/containerd
        - name: sys-path
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: chaos-daemon-cert
          secret:
            secretName:  chaos-mesh-daemon-certs
---
# Source: chaos-mesh/templates/chaos-dashboard-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dashboard
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-dashboard
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.3
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.3
        app.kubernetes.io/component: chaos-dashboard
      annotations:
    spec:
      securityContext:
            {}
      serviceAccountName: chaos-dashboard
      containers:
        - name: chaos-dashboard
          image: ghcr.io/chaos-mesh/chaos-dashboard:v2.6.3
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          command:
            - /usr/local/bin/chaos-dashboard
          env:
            - name: CLEAN_SYNC_PERIOD
              value: "12h"
            - name: DATABASE_DATASOURCE
              value: "/data/core.sqlite"
            - name: DATABASE_DRIVER
              value: "sqlite3"
            - name: LISTEN_HOST
              value: "0.0.0.0"
            - name: LISTEN_PORT
              value: "2333"
            - name: METRIC_HOST
              value: "0.0.0.0"
            - name: METRIC_PORT
              value: "2334"
            - name: TTL_EVENT
              value: "168h"
            - name: TTL_EXPERIMENT
              value: "336h"
            - name: TTL_SCHEDULE
              value: "336h"
            - name: TTL_WORKFLOW
              value: "336h"
            - name: TZ
              value: UTC
            - name: CLUSTER_SCOPED
              value: "true"
            - name: TARGET_NAMESPACE
              value: "chaos-mesh"
            - name: ENABLE_FILTER_NAMESPACE
              value: "false"
            - name: SECURITY_MODE
              value: "true"
            - name: GCP_SECURITY_MODE
              value: "false"
            - name: GCP_CLIENT_ID
              value: ""
            - name: GCP_CLIENT_SECRET
              value: ""
            - name: DNS_SERVER_CREATE
              value: "true"
            - name: ROOT_URL
              value: "http://localhost:2333"
            - name: ENABLE_PROFILING
              value: "true"
          volumeMounts:
            - name: storage-volume
              mountPath: /data
              subPath: ""
          ports:
            - name: http
              containerPort: 2333
            - name: metric
              containerPort: 2334
      volumes:
      - name: storage-volume
        emptyDir: {}
---
# Source: chaos-mesh/templates/controller-manager-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "chaos-mesh"
  name: chaos-controller-manager
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: controller-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.3
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.3
        app.kubernetes.io/component: controller-manager
      annotations:
        rollme: "CBPhn"
    spec:
      securityContext:
            {}
      serviceAccountName: chaos-controller-manager
      containers:
      - name: chaos-mesh
        image: ghcr.io/chaos-mesh/chaos-mesh:v2.6.3
        imagePullPolicy: IfNotPresent
        resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
        command:
          - /usr/local/bin/chaos-controller-manager
        env:
          - name: METRICS_PORT
            value: "10080"
          - name: WEBHOOK_PORT
            value: "10250"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TEMPLATE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ALLOW_HOST_NETWORK_TESTING
            value: "false"
          - name: TARGET_NAMESPACE
            value: "chaos-mesh"
          - name: CLUSTER_SCOPED
            value: "true"
          - name: TZ
            value: UTC
          - name: CHAOS_DAEMON_SERVICE_PORT
            value: !!str 31767
          - name: BPFKI_PORT
            value: !!str 50051
          - name: ENABLED_CONTROLLERS
            value: "*"
          - name: ENABLED_WEBHOOKS
            value: "*"
          - name: TEMPLATE_LABELS
            value: "app.kubernetes.io/component:template"
          - name: CONFIGMAP_LABELS
            value: "app.kubernetes.io/component:webhook"
          - name: ENABLE_FILTER_NAMESPACE
            value: "false"
          - name: PPROF_ADDR
            value: ":10081"
          - name: CTRL_ADDR
            value: ":10082"
          - name: CHAOS_DNS_SERVICE_NAME
            value: chaos-mesh-dns-server
          - name: CHAOS_DNS_SERVICE_PORT
            value: !!str 9288
          - name: SECURITY_MODE
            value: "true"
          - name: CHAOSD_SECURITY_MODE
            value: "true"
          - name: CHAOS_DAEMON_CLIENT_CERT
            value: /etc/chaos-daemon/cert/tls.crt
          - name: CHAOS_DAEMON_CLIENT_KEY
            value: /etc/chaos-daemon/cert/tls.key
          - name: CHAOS_MESH_CA_CERT
            value: /etc/chaos-daemon/cert/ca.crt
          - name: QPS
            value: "30"
          - name: BURST
            value: "50"
          - name: CHAOSD_CA_CERT
            value: /etc/chaosd/cert/ca.crt
          - name: CHAOSD_CLIENT_CERT
            value: /etc/chaosd/cert/tls.crt
          - name: CHAOSD_CLIENT_KEY
            value: /etc/chaosd/cert/tls.key
          - name: POD_FAILURE_PAUSE_IMAGE
            value: gcr.io/google-containers/pause:latest
          - name: ENABLE_LEADER_ELECTION
            value: "true"
          - name: LEADER_ELECT_LEASE_DURATION
            value: "15s"
          - name: LEADER_ELECT_RENEW_DEADLINE
            value: "10s"
          - name: LEADER_ELECT_RETRY_PERIOD
            value: "2s"
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
          - name: chaos-daemon-client-cert
            mountPath: /etc/chaos-daemon/cert
            readOnly: true
          - name: chaosd-client-cert
            mountPath: /etc/chaosd/cert
            readOnly: true
        ports:
          - name: webhook
            containerPort: 10250
          - name: http
            containerPort: 10080
          - name: pprof
            containerPort: 10081
          - name: ctrl
            containerPort: 10082
      volumes:
        - name: webhook-certs
          secret:
            secretName: chaos-mesh-webhook-certs
        - name: chaos-daemon-client-cert
          secret:
            secretName: chaos-mesh-daemon-client-certs
        - name: chaosd-client-cert
          secret:
            secretName: chaos-mesh-chaosd-client-certs
---
# Source: chaos-mesh/templates/dns-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-dns-server
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-dns-server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-dns-server
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.3
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.3
        app.kubernetes.io/component: chaos-dns-server
    spec:
      serviceAccountName: chaos-dns-server
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values: ["chaos-dns"]
              topologyKey: kubernetes.io/hostname
      priorityClassName: 
      containers:
      - name: chaos-dns-server
        image: ghcr.io/chaos-mesh/chaos-coredns:v0.2.6
        imagePullPolicy: IfNotPresent
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/chaos-dns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/chaos-dns
          readOnly: true
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 5353
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        - containerPort: 9288
          name: grpc
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: dns-server-config
            items:
            - key: Corefile
              path: Corefile
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/chaos-daemon-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/chaos-dashboard-pvc.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/ingress.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-configmap.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/secrets-configuration.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-mesh-ca
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-mesh-ca
spec:
  duration: 43800h0m0s #5year
  secretName: chaos-mesh-ca
  commonName: "chaos-mesh-ca"
  isCA: true
  issuerRef:
    name: chaos-mesh-selfsigned
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-mesh-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-mesh-cert
spec:
  duration: 43800h #5year
  dnsNames:
    - chaos-mesh-controller-manager
    - chaos-mesh-controller-manager.chaos-mesh
    - chaos-mesh-controller-manager.chaos-mesh.svc
  isCA: false
  secretName: chaos-mesh-webhook-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-daemon-client-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-daemon-client-cert
spec:
  duration: 43800h0m0s #5year
  dnsNames:
    - controller-manager.chaos-mesh.org
  isCA: false
  secretName: chaos-mesh-daemon-client-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-daemon-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-daemontcert
spec:
  duration: 43800h0m0s #5year
  dnsNames:
    - chaos-daemon.chaos-mesh.org
  isCA: false
  secretName: chaos-mesh-daemon-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: chaos-mesh-selfsigned
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-mesh-selfsigned
spec:
  selfSigned: {}
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: chaos-mesh-ca
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: chaos-mesh-ca
spec:
  ca:
    secretName: chaos-mesh-ca
---
# Source: chaos-mesh/templates/mutating-admission-webhooks.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: chaos-mesh-mutation
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-podchaos
    failurePolicy: Fail
    name: mpodchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - podchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-iochaos
    failurePolicy: Fail
    name: miochaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - iochaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-timechaos
    failurePolicy: Fail
    name: mtimechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - timechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-networkchaos
    failurePolicy: Fail
    name: mnetworkchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - networkchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-kernelchaos
    failurePolicy: Fail
    name: mkernelchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - kernelchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-stresschaos
    failurePolicy: Fail
    name: mstresschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - stresschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-awschaos
    failurePolicy: Fail
    name: mawschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - awschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-azurechaos
    failurePolicy: Fail
    name: mazurechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - azurechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-gcpchaos
    failurePolicy: Fail
    name: mgcpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - gcpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-dnschaos
    failurePolicy: Fail
    name: mdnschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - dnschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-jvmchaos
    failurePolicy: Fail
    name: mjvmchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jvmchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-schedule
    failurePolicy: Fail
    name: mschedule.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schedules
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-workflow
    failurePolicy: Fail
    name: mworkflow.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workflows
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-httpchaos
    failurePolicy: Fail
    name: mhttpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - httpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-blockchaos
    failurePolicy: Fail
    name: mblockchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - blockchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-physicalmachinechaos
    failurePolicy: Fail
    name: mphysicalmachinechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachinechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-physicalmachine
    failurePolicy: Fail
    name: mphysicalmachine.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachines
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-statuscheck
    failurePolicy: Fail
    name: mstatuscheck.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statuschecks
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-remotecluster
    failurePolicy: Fail
    name: mremotecluster.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - remotecluster
---
# Source: chaos-mesh/templates/validating-admission-webhooks.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: chaos-mesh-validation
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-podchaos
    failurePolicy: Fail
    name: vpodchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - podchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-iochaos
    failurePolicy: Fail
    name: viochaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - iochaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-timechaos
    failurePolicy: Fail
    name: vtimechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - timechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-networkchaos
    failurePolicy: Fail
    name: vnetworkchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - networkchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-kernelchaos
    failurePolicy: Fail
    name: vkernelchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - kernelchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-stresschaos
    failurePolicy: Fail
    name: vstresschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - stresschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-awschaos
    failurePolicy: Fail
    name: vawschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - awschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-azurechaos
    failurePolicy: Fail
    name: vazurechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - azurechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-gcpchaos
    failurePolicy: Fail
    name: vgcpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - gcpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-dnschaos
    failurePolicy: Fail
    name: vdnschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - dnschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-jvmchaos
    failurePolicy: Fail
    name: vjvmchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jvmchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-schedule
    failurePolicy: Fail
    name: vschedule.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schedules
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-workflow
    failurePolicy: Fail
    name: vworkflow.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workflows
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-httpchaos
    failurePolicy: Fail
    name: vhttpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - httpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-blockchaos
    failurePolicy: Fail
    name: vblockchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - blockchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-physicalmachinechaos
    failurePolicy: Fail
    name: vphysicalmachinechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachinechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-physicalmachine
    failurePolicy: Fail
    name: vphysicalmachine.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachines
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-statuscheck
    failurePolicy: Fail
    name: vstatuscheck.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statuschecks
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-remotecluster
    failurePolicy: Fail
    name: vremotecluster.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - remotecluster
---
# Source: chaos-mesh/templates/validating-admission-webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: chaos-mesh-validation-auth
  labels:
    helm.sh/chart: chaos-mesh-2.6.3
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.3
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-auth
    failurePolicy: Fail
    name: vauth.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources: [ "*" ]
