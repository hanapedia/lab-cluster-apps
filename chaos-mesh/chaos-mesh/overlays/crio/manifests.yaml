---
# Source: chaos-mesh/templates/chaos-daemon-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-daemon
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ServiceAccount for component chaos-dashboard
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-controller-manager
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: "chaos-mesh"
  name: chaos-dns-server
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
---
# Source: chaos-mesh/templates/secrets-configuration.yaml
kind: Secret
apiVersion: v1
metadata:
  name: chaos-mesh-chaosd-client-certs
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaosd-client-cert
type: Opaque
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSHpGNDlvV2loS0s0cEQ0QVRyWGw0ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsamFHRnZjMlF0WTJFd0hoY05Nak13T1RBNU1USTFPVFEyV2hjTk1qZ3dPVEEzTVRJMQpPVFEyV2pBVU1SSXdFQVlEVlFRREV3bGphR0Z2YzJRdFkyRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZ3R3c4SVpMK2dpclBGelpEQXFHZGk2Zjh1SWNRaTYvdndZSGFRS2VUUGxFV0tCa2QKampYa2NnYTVwbkEyRUdVTmszWU1PenhPUklBTVJ2czdxaTRsbWxMQWtDbmxjOWQwNnh3MXdXK2QwSWJVMThIcgpPUVdsS2dQV0psbUhZQnpaQjNiN29WdHZpaThQUzBqK2IzemNiczBTekVUMnEyTEZMaDQ5V1hsNndmbTI5WmpaClgrZGZ3NVBvS2ZhMXJ2aEpvNzVva0NyaTV5Mi9zTWhOZUszL0RlLzBYQTN5UlM0SDR1NjJNdjZmRXJGSTF1T2sKN0t0L1pZeTg0UkdMNXl0REM5LzlCa1hPdlVPWXRZMkJyWGZqRHg4Rk5EWldLS21jOVZsT0p5ZC9PQmUyOXUzbgpsVEZlcXhoS24yZ3Y3MXJJQkhhcFUrcnNOcVZxUUdQNWNITVBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvRzdjL1IxNzQ5ZUc0WnkyUlYvcnFDNHZibDB3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJeFpDTXdZRDNURzVrTFlQd25ScklJcUZUMjVrMGR3UGdydk9tUHA0ejk3SWl3U3RFS0I1MEM1CkY5OFVlaE5BYlQ1cW9Sb29hTmNmSHBIY1M5NFVLVVZnNDVCZUliODAzY1ZsRWlmWDZTMUF0bHA5Zk54RytxUlMKZTVZaVBVbFlwcVJaMWQxc1d5U2Q2SkRrYml2ZUhOcXFSUDd6dGlTR2NuSFo5QVM4cXQ3RW5uQ2c4L2tWOVQ0RgpQRXBHc0FuTGpYOXQ5ODJrT0RFRWdEVjhtRForb1FEbi9vRCtTV1BmaGpJTVVuMzBUTkZaM0FqMG9aMmlWaXEvCk9jMUxWMGc3S1lXdnlkSFNKQ09mYmdBMVRjVDZDbzIySm54NjhsWHlaTzlvOHFNR1ljOFlmNk1CcVl1S3VZaW4KRWkraWQ0TDc0OEx2Wm5BcVNnb3RpL0p3bTA2WW9Ycz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGNCc1BDR1Mvb0lxenhjMlF3S2huWXVuL0xpSEVJdXY3OEdCMmtDbmt6NVJGaWdaCkhZNDE1SElHdWFad05oQmxEWk4yRERzOFRrU0FERWI3TzZvdUpacFN3SkFwNVhQWGRPc2NOY0Z2bmRDRzFOZkIKNnprRnBTb0QxaVpaaDJBYzJRZDIrNkZiYjRvdkQwdEkvbTk4M0c3TkVzeEU5cXRpeFM0ZVBWbDVlc0g1dHZXWQoyVi9uWDhPVDZDbjJ0YTc0U2FPK2FKQXE0dWN0djdESVRYaXQvdzN2OUZ3TjhrVXVCK0x1dGpMK254S3hTTmJqCnBPeXJmMldNdk9FUmkrY3JRd3ZmL1FaRnpyMURtTFdOZ2ExMzR3OGZCVFEyVmlpcG5QVlpUaWNuZnpnWHR2YnQKNTVVeFhxc1lTcDlvTCs5YXlBUjJxVlBxN0RhbGFrQmorWEJ6RHdJREFRQUJBb0lCQVFDZHc5ZFYzYjlGRnhvSwpIODJsaG1yam92Q0JlY0lmbkNIZjJIUzlaOG1KZWpUOHhUN01TcEdLVU1JMnlLZExLcWRFUG5uMlppZkZsWGJHCjFMWklzb3VnYWs5TTIzYmhYUnJ1WjBnWlJ0ckNnQU9odVFRM29rVnpzR0poTGpWTkFJdmpSY1pTR0RnM2MzbjUKN0trdWZFbVVIejJ5bW84R2NGTWJWcUMvZHl1b2w4S3RHNkN4Z0NRVllVSlhtN2NUZnB0SGFEVHo0QWx6VjYzNQptUjB3NFd2bStSOWJPKy9DNXZReEgwNm0xalRUV05SUEZzTmtwRWMyRTZhZmFKVGUydGZtRU56Y1V6RVMyK0ZxCnQ2N2JHQkxEaWp3N3RLSFdqdXU0Y05yeWpOQ2NiTnA0MndhYUNGblBORXlkNHhMb1F1QWhQOVl1dUNXN1lqZ0wKSFBMRVNSUzVBb0dCQVBIUGpPaHFyM1RNdjJpR20vTDA3YzhnWnoxVFh1MklNUlhSeGs1R3E2aFhWNTlOZEc2dAoyQVJKblZMWmhmOWQzY2VnVnVmZEM0cTlZaG5QUVZnMDhhYlZia0p2bXdLSkMwb1NJVzBpTkdoOHdncmM5UlFOCmRrRm5LSnlIY2EwTHBvOGkwcmZydS9UQnlsYWJZWVBKdVVyYVJuelowTDNUZmQ0SnhWT3RWK0o5QW9HQkFORmIKQmJ5enBOSXVQcndabGFqRDJ2d1RrQzNpckVmWEdZVVlPQkdGYmVzbVc3VmU3YmZObXhiZmJVTzlIc1NQalpyZApCc1pTVmtHdThEcE95ekpEMGkvdDVmeTF2OFBiYXVqSVV5cExONjByRDd3ZVFRa3dsc2YyMU0zMGc3QUtKUzRnCmZxTW5yaEtBbmNiZzUrYUhDV0hSVlpJMms2RlY3TkJoSXdqaldmVjdBb0dBVXZDOHhTOXF0U1pSZFBuTzNkdlQKQWR0OGJkVjkxdjJDMEpnZWE5VGpwaDhuUjlYYVhPZzJFdXBwRXZUWGVFcnEra0R0N2lPc2hNOEdxaEdqdVN5WAp3b0NzakE4WjNSbkNqSXFCZXB4ajIzOEhVNUNNWTI5bW8zSk54THJVYStWMklOeHg2SEhzQ3p5NU9WR2NkZ2FvCkRwdWwxOGNpU1NvVW55Yzh6c0hEUmtVQ2dZQnZrNE5MUHJMcEVaeDl3MlR2dlBKSXhtUmhFQjJoYkJJOXpOcVUKKy9mSkMzaDFBVkxRVXRRRkxLNmZHM3Y2WmtlaDhZcGF5Q2NRZXB1dGQ3RHo2UkZzV2UzbzhUUnl2YzRNb2pjdwpvMFhaRk1vZUNFSEJGQlJJSGxUc0x4VEFEYWdqSFU1Z3hoVVA1MXd2VWs1Rm5sSnh2NDlMamFyQW9YckUxQUJJCkRHTTFZUUtCZ1FDRWdlTXh2VkFNQXVDWHIzdmhzbE5Qb2dmVWloaG1XMzg0THhETGgwa1lSLzFiVmhCVkNMUGIKOUxrOExod3hXZFVCWnFyZnVvREVGT1RNZ2V6RWtaQ2ZmUUVQQVNRdEFmMXFYaXp3TEhJN1NhaHFkZmp3aUpXLwpIOU5xREkzOGRiQjF5THJBODd6Y2dGMU5GdkFXcEZNTDJwMGlqU0xNSC8wNHdVRVc2WW96K2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lSQU52YmpReUVCck9TRWhIWG95cnBqbWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlkyaGhiM05rTFdOaE1CNFhEVEl6TURrd09URXlOVGswTmxvWERUSTRNRGt3TnpFeQpOVGswTmxvd0xERXFNQ2dHQTFVRUF4TWhZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMbU5vWVc5ekxXMWxjMmd1CmIzSm5NSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdXWlhVYk14MFlxMFFzOFUKek01YzRzNE1MbnhvOVZ6UEtmRTcyalkwZ3QrenZNYlBwUlRveENXYnhLZnJEWDN0SGcraDQ3czNaSTJWVHV4Kwo1UmlJMnR6dlplaTdHa0p6bmszMHNWc3lHd1h1OFJONDFzRHc2V2tzbGxKaHJjL0VLOWJ6T2ZUdFN1UUhNa21OCm9GU0F5cGpNM1JLa0tJUXdvUmFOYXlXTWtSMmZSbjhUUmhFc0R1VTFZNHNwUmlrQjNjTmsyL3k1S3MzeFZHYzgKNFljVFBIa2E3eFZ2aTcvV1M1c2phUTZwVmkveU54QWFCcnJOWk80Rkd2YVh4UURtNC94a3hIaHRkRE9GbzBENgpGRk9XWE9YN2lMK2hHVlcwQ3psTEV3d0pBMCtINnluL0RJZzZibkpwbktXbVAxQ1hMM1Y4RFdJUld5b25MOGJtCk5MVGV0d0lEQVFBQm80R2FNSUdYTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDhidHo5SFh2agoxNGJobkxaRlgrdW9MaTl1WFRBM0JnTlZIUkVFTURBdWdnbHNiMk5oYkdodmMzU0NJV052Ym5SeWIyeHNaWEl0CmJXRnVZV2RsY2k1amFHRnZjeTF0WlhOb0xtOXlaekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQnErQXBXRE4Kb0hXZ3lIWU4yUVh3SGFDV3FZeFFnMXU5ZzlQRU9hSnMyRWxwYWs1NFhEaENRak1TUE1pQ3RDWUVYZ2R5K1k5aQpoVlN2VVdiOWdnRGROZlMxSDRRdlczZ1FaMHk3UFY3MEJ0NVBTenhvbmZuaXI2K1NPVGtUNkpMRFBnU1lld2hWClZMeDRUcURRYzRORTlIQm5GK29kS01oMVlsTmg4VkdrODRZZGJDUmtta2QveThTMHF2cDEvek96VGN3V3NVRzYKVFBZcTF2ZVAyVHZhVTh4OTdCdGFSSW9CaVMvK0ZhZ2ZpWkFPOVlLcDYyb0RFR2t1a29ka012Mkwxa0ZsWmlxRwpoajlvUk1yOFRJUzFlelZRSXU1WVlEVC81S0E4S04wWG92c1dPb2NRL2JSVk5xeE5qS0MvMENjTlFRZndPOEtMCm5ySVpwWWlGdjl2UXdnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1daWFViTXgwWXEwUXM4VXpNNWM0czRNTG54bzlWelBLZkU3MmpZMGd0K3p2TWJQCnBSVG94Q1dieEtmckRYM3RIZytoNDdzM1pJMlZUdXgrNVJpSTJ0enZaZWk3R2tKem5rMzBzVnN5R3dYdThSTjQKMXNEdzZXa3NsbEpocmMvRUs5YnpPZlR0U3VRSE1rbU5vRlNBeXBqTTNSS2tLSVF3b1JhTmF5V01rUjJmUm44VApSaEVzRHVVMVk0c3BSaWtCM2NOazIveTVLczN4VkdjODRZY1RQSGthN3hWdmk3L1dTNXNqYVE2cFZpL3lOeEFhCkJyck5aTzRGR3ZhWHhRRG00L3hreEhodGRET0ZvMEQ2RkZPV1hPWDdpTCtoR1ZXMEN6bExFd3dKQTArSDZ5bi8KRElnNmJuSnBuS1dtUDFDWEwzVjhEV0lSV3lvbkw4Ym1OTFRldHdJREFRQUJBb0lCQVFEQkk5eG1LZ2ZCbEx5Swp6OVdjNXlYYUZ4NFJPb3R6SmZsNWtJRk9YYjI1U1lCdE1UcmpTT3RnSDVMZEpUalhZMy91K251Wk96bUpnTit3ClR2dzIvSGFINUFac2hxeDhBQXNJK0I4N0U3RUpUYmFmS093UHcrV1RwRVl6NVJmSmhla0tRd0xxU1ZERTdzN0YKQ0xHWWdXdVJhR0dIRWZ2QXZxcjE1TmpjUFVhUkQvMTk4RFdCNzJ2bzlJLzgrU2M2Nis0ZU1MdzJmb0xKREIzWAozbHhEelFwNDZ1TGhncHpzdGVvZ3Y3QTVKc3FHV3lJNDdYUThXU3N4TUtUOXFFNHc0aFo1alMvVFhMTmxGR3ZjClBhKzJjSnRUNXRtNTNxcEh4YW5FVTF6OE5RMTJNY1hXQSt5TVh1V25Mc0JDb2pFdjNXdEhrTVpFblAxRm9XVzgKNWRJQnhIY0JBb0dCQU1WRHBYdEJxZTJNN1BtcVI2b1NFSXZIcC94QWpZT0NoWmplUHF4V1RIS01tU0JHekhicgpqZDhXUjhURjJibDNYR2tlMHpiZ0lNSkhtR3AvRjgzQk9mQTJwQm5HRis2VjdnTTVFQU1OdXpGdDd0NnZoeWs4CjZqa2FkcWMyelYwaXo1QmZrV0hWTk1PVittRUlLVlNsZ01UUlk0Vm9VK0pTT2FXOXllWHFRRmszQW9HQkFQcjgKSUp1MGd5b21yTHdmWFEydmNUZzE5V0ZIdHdqSmVibGFHZE5teWZBZDZRUHVDaTdhVE4rRG5DaG03M0NUYTBBVApYSTIveHJHL211bjdpd0d4Z3JvaElQclJsTDdlUGE3UW5qbzBUSnRvK0dXb1BtNjg0ZEdlT25aRkxrdWtqRnU1CjJwTVJsVEVvdE9YU1NkNmlyenNsc2NBZElyd2lSWEh4Yk1CZEpHYUJBb0dBVkwrblRMajlSRzJUTWdBU0llTDQKOE5TcU94bVFzcnRVb2tSNU1Ka3k1dE80eGNFay9zSmNoVWVSTmR5Nm1ZL0tSKzlTVnZVYm5kd2NnMFJ1K1pyVwpSWGwwTHc2SUlaeVFVUm9tNHVqM1Qxa25rc3hlaVR6K2MrSUdyL2cvYXBBV0ZMUzZSUW5RVFdjVjFySW03NUxiCks3TzV5Z3IwWHZ0c2dPUjA1UzRxenlrQ2dZRUFuUkR0Z3lPTE5mU3dBcWFLQUVkN3poYU9jZ3VFTXQ2SzY0REUKU3JTM3lTbWVxaFBza1hlUnhnckJ6ZExsSXdsT2cvSFo2T2RMKys2UmpyNFpOcjBVdDFDR0tCRENTbFFnTytkWQpMY3FPNm03ZGpCaW13WHc0d1lxSXdYejN4T1M3NWFkQWJ1c0E5NXVtNFhBaFJFK0E0NzNxSi9UVHlQS1ZqUUh0CjhkQVlPSUVDZ1lCVEpKekZiVWw0Ui9kekZGWGRtZ1BBUzZzeVpaUW9NYndZQnNWMXIrQlk3d21kRlN2T1cwTkgKVFp6QTREZG0wc2RWV2lKdU03Z01xaTd1elI3cW1OdWYxTkZqb2tuYW1nQlpGUkc3c3V6RyswcEtBNDdZalJMUwpxKzhIUUVBSm5HeDYvYTkzT3QzTExIeWlYZEJVT09rQnZOamVDcGJUT21xeEZGbm1QWHZsMXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: chaos-mesh/templates/dns-configmap.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: dns-server-config
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dns-server
data:
  Corefile: |
    .:5353 {
        errors
        health {
            lameduck 5s
        }
        ready
        k8s_dns_chaos cluster.local in-addr.arpa ip6.arpa {
            pods insecure
            fallthrough in-addr.arpa ip6.arpa
            ttl 30
            grpcport 9288
        }
        forward . /etc/resolv.conf {
            max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRole for chaos-dashboard at cluster scope
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
rules:
  # chaos-dashboard could list namespace for selector hints
  - apiGroups: [ "" ]
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  # chaos-dashboard use subjectaccessreviews to authorize the requests
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRole for chaos-dashboard in target namespace
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
rules:
  # chaos dashboard could list pods for selector hints
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  # chaos dashboard could record evnets from chaos experiments
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
  # chaos dashboard could record and manipulate all the Chaos Mesh resources in target namespace
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# roles
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "configmaps", "secrets"]
    verbs: [ "get", "list", "watch", "delete", "update", "patch" ]
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - "create"
  - apiGroups:
      - ""
    resources:
      - "pods/log"
    verbs:
      - "get"
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - patch
      - create
      - watch
      - list
      - get
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources:
      - nodes
      - persistentvolumes
      - persistentvolumeclaims
      - namespaces
      - services
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# roles
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-target-namespace
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "*" ]
  - apiGroups: [ "chaos-mesh.org" ]
    resources:
      - "*"
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources:
      - namespaces
      - services
      - endpoints
      - pods
    verbs: [ "get", "list", "watch" ]
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# ClusterRoleBinding for chaos-dashboard at cluster scope
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dashboard-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-dashboard
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/chaos-dashboard-rbac.yaml
# binding ClusterRole to ServiceAccount for componnet chaos dashboard
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dashboard-target-namespace
  # TODO: notice that the targetNamespace is still defined as .Values.controllerManager.targetNamespace, .Values.targetNamespace would be better.
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dashboard-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-dashboard
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# bindings cluster level
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-controller-manager-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-target-namespace
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-controller-manager-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# bindings cluster level
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-cluster-level
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dns-server-cluster-level
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-target-namespace
  namespace: 
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-mesh-chaos-dns-server-target-namespace
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
rules:
  - apiGroups: [ "" ]
    resources: [ "services", "endpoints", "secrets" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
  - apiGroups: [ "" ]
    resources: [ "pods/exec" ]
    verbs: [ "create" ]
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "*" ]
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "*" ]
---
# Source: chaos-mesh/templates/dns-rbac.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
rules:
  - apiGroups: [ "" ]
    resources: [ "configmaps" ]
    verbs: [ "get", "list" ]
---
# Source: chaos-mesh/templates/controller-manager-rbac.yaml
# binding for control plane namespace
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-controller-manager-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaos-mesh-chaos-controller-manager-control-plane
subjects:
  - kind: ServiceAccount
    name: chaos-controller-manager
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/dns-rbac.yaml
# binding for control plane namespace
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: chaos-mesh-chaos-dns-server-control-plane
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chaos-mesh-chaos-dns-server-control-plane
subjects:
  - kind: ServiceAccount
    name: chaos-dns-server
    namespace: "chaos-mesh"
---
# Source: chaos-mesh/templates/chaos-daemon-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "31766"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-daemon
spec:
  clusterIP: None
  ports:
    - name: grpc
      port: 31767
      targetPort: grpc
      protocol: TCP
    - name: http
      port: 31766
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-daemon
---
# Source: chaos-mesh/templates/chaos-dashboard-deployment.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dashboard
    helm.sh/chart: chaos-mesh-2.6.2
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "2334"
spec:
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dashboard
  type: NodePort
  ports:
    - protocol: TCP
      port: 2333
      targetPort: 2333
      name: http
    - protocol: TCP
      port: 2334
      targetPort: 2334
      name: metric
---
# Source: chaos-mesh/templates/controller-manager-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  namespace: "chaos-mesh"
  name: chaos-mesh-controller-manager
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "10080"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: webhook
      protocol: TCP
      name: webhook
    - port: 10081
      targetPort: pprof
      protocol: TCP
      name: pprof
    - port: 10082
      targetPort: ctrl
      protocol: TCP
      name: ctrl
    - port: 10080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: controller-manager
---
# Source: chaos-mesh/templates/dns-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: Service
metadata:
  name: chaos-mesh-dns-server
  namespace: "chaos-mesh"
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: dns-server
spec:
  selector:
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/component: chaos-dns-server
  ports:
  - name: dns
    port: 53
    targetPort: 5353
    protocol: UDP
  - name: dns-tcp
    port: 53
    targetPort: 5353
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
  - name: grpc
    port: 9288
    protocol: TCP
---
# Source: chaos-mesh/templates/chaos-daemon-daemonset.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: "chaos-mesh"
  name: chaos-daemon
  labels:
    app.kubernetes.io/component: chaos-daemon
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-daemon
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.2
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.2
        app.kubernetes.io/component: chaos-daemon
      annotations:
        rollme: "umUN3"
    spec:
      serviceAccountName: chaos-daemon
      hostPID: true
      containers:
        - name: chaos-daemon
          image: ghcr.io/chaos-mesh/chaos-daemon:v2.6.2
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/chaos-daemon
            - --runtime
            - crio
            - --http-port
            - !!str 31766
            - --grpc-port
            - !!str 31767
            - --pprof
            - --ca
            - /etc/chaos-daemon/cert/ca.crt
            - --cert
            - /etc/chaos-daemon/cert/tls.crt
            - --key
            - /etc/chaos-daemon/cert/tls.key
            - --runtime-socket-path
            - /host-run/crio.sock
          env:
            - name: TZ
              value: UTC
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_PTRACE
          volumeMounts:
            - name: socket-path
              mountPath: /host-run
            - name: sys-path
              mountPath: /host-sys
            - name: lib-modules
              mountPath: /lib/modules
            - name: chaos-daemon-cert
              mountPath: /etc/chaos-daemon/cert
              readOnly: true
          ports:
            - name: grpc
              containerPort: 31767
            - name: http
              containerPort: 31766
      volumes:
        - name: socket-path
          hostPath: 
            path: /var/run/crio
        - name: sys-path
          hostPath:
            path: /sys
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: chaos-daemon-cert
          secret:
            secretName:  chaos-mesh-daemon-certs
---
# Source: chaos-mesh/templates/chaos-dashboard-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "chaos-mesh"
  name: chaos-dashboard
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dashboard
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-dashboard
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.2
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.2
        app.kubernetes.io/component: chaos-dashboard
      annotations:
    spec:
      securityContext:
            {}
      serviceAccountName: chaos-dashboard
      containers:
        - name: chaos-dashboard
          image: ghcr.io/chaos-mesh/chaos-dashboard:v2.6.2
          imagePullPolicy: IfNotPresent
          resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
          command:
            - /usr/local/bin/chaos-dashboard
          env:
            - name: CLEAN_SYNC_PERIOD
              value: "12h"
            - name: DATABASE_DATASOURCE
              value: "/data/core.sqlite"
            - name: DATABASE_DRIVER
              value: "sqlite3"
            - name: LISTEN_HOST
              value: "0.0.0.0"
            - name: LISTEN_PORT
              value: "2333"
            - name: METRIC_HOST
              value: "0.0.0.0"
            - name: METRIC_PORT
              value: "2334"
            - name: TTL_EVENT
              value: "168h"
            - name: TTL_EXPERIMENT
              value: "336h"
            - name: TTL_SCHEDULE
              value: "336h"
            - name: TTL_WORKFLOW
              value: "336h"
            - name: TZ
              value: UTC
            - name: CLUSTER_SCOPED
              value: "true"
            - name: TARGET_NAMESPACE
              value: "chaos-mesh"
            - name: ENABLE_FILTER_NAMESPACE
              value: "false"
            - name: SECURITY_MODE
              value: "true"
            - name: GCP_SECURITY_MODE
              value: "false"
            - name: GCP_CLIENT_ID
              value: ""
            - name: GCP_CLIENT_SECRET
              value: ""
            - name: DNS_SERVER_CREATE
              value: "true"
            - name: ROOT_URL
              value: "http://localhost:2333"
            - name: ENABLE_PROFILING
              value: "true"
          volumeMounts:
            - name: storage-volume
              mountPath: /data
              subPath: ""
          ports:
            - name: http
              containerPort: 2333
            - name: metric
              containerPort: 2334
      volumes:
      - name: storage-volume
        emptyDir: {}
---
# Source: chaos-mesh/templates/controller-manager-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "chaos-mesh"
  name: chaos-controller-manager
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: controller-manager
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.2
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.2
        app.kubernetes.io/component: controller-manager
      annotations:
        rollme: "JqEXP"
    spec:
      securityContext:
            {}
      serviceAccountName: chaos-controller-manager
      containers:
      - name: chaos-mesh
        image: ghcr.io/chaos-mesh/chaos-mesh:v2.6.2
        imagePullPolicy: IfNotPresent
        resources:
            limits: {}
            requests:
              cpu: 25m
              memory: 256Mi
        command:
          - /usr/local/bin/chaos-controller-manager
        env:
          - name: METRICS_PORT
            value: "10080"
          - name: WEBHOOK_PORT
            value: "10250"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: TEMPLATE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: ALLOW_HOST_NETWORK_TESTING
            value: "false"
          - name: TARGET_NAMESPACE
            value: "chaos-mesh"
          - name: CLUSTER_SCOPED
            value: "true"
          - name: TZ
            value: UTC
          - name: CHAOS_DAEMON_SERVICE_PORT
            value: !!str 31767
          - name: BPFKI_PORT
            value: !!str 50051
          - name: ENABLED_CONTROLLERS
            value: "*"
          - name: ENABLED_WEBHOOKS
            value: "*"
          - name: TEMPLATE_LABELS
            value: "app.kubernetes.io/component:template"
          - name: CONFIGMAP_LABELS
            value: "app.kubernetes.io/component:webhook"
          - name: ENABLE_FILTER_NAMESPACE
            value: "false"
          - name: PPROF_ADDR
            value: ":10081"
          - name: CTRL_ADDR
            value: ":10082"
          - name: CHAOS_DNS_SERVICE_NAME
            value: chaos-mesh-dns-server
          - name: CHAOS_DNS_SERVICE_PORT
            value: !!str 9288
          - name: SECURITY_MODE
            value: "true"
          - name: CHAOSD_SECURITY_MODE
            value: "true"
          - name: CHAOS_DAEMON_CLIENT_CERT
            value: /etc/chaos-daemon/cert/tls.crt
          - name: CHAOS_DAEMON_CLIENT_KEY
            value: /etc/chaos-daemon/cert/tls.key
          - name: CHAOS_MESH_CA_CERT
            value: /etc/chaos-daemon/cert/ca.crt
          - name: QPS
            value: "30"
          - name: BURST
            value: "50"
          - name: CHAOSD_CA_CERT
            value: /etc/chaosd/cert/ca.crt
          - name: CHAOSD_CLIENT_CERT
            value: /etc/chaosd/cert/tls.crt
          - name: CHAOSD_CLIENT_KEY
            value: /etc/chaosd/cert/tls.key
          - name: POD_FAILURE_PAUSE_IMAGE
            value: gcr.io/google-containers/pause:latest
          - name: ENABLE_LEADER_ELECTION
            value: "true"
          - name: LEADER_ELECT_LEASE_DURATION
            value: "15s"
          - name: LEADER_ELECT_RENEW_DEADLINE
            value: "10s"
          - name: LEADER_ELECT_RETRY_PERIOD
            value: "2s"
        volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
          - name: chaos-daemon-client-cert
            mountPath: /etc/chaos-daemon/cert
            readOnly: true
          - name: chaosd-client-cert
            mountPath: /etc/chaosd/cert
            readOnly: true
        ports:
          - name: webhook
            containerPort: 10250
          - name: http
            containerPort: 10080
          - name: pprof
            containerPort: 10081
          - name: ctrl
            containerPort: 10082
      volumes:
        - name: webhook-certs
          secret:
            secretName: chaos-mesh-webhook-certs
        - name: chaos-daemon-client-cert
          secret:
            secretName: chaos-mesh-daemon-client-certs
        - name: chaosd-client-cert
          secret:
            secretName: chaos-mesh-chaosd-client-certs
---
# Source: chaos-mesh/templates/dns-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-dns-server
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-dns-server
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: chaos-mesh
      app.kubernetes.io/instance: chaos-mesh
      app.kubernetes.io/component: chaos-dns-server
  template:
    metadata:
      labels:
        helm.sh/chart: chaos-mesh-2.6.2
        app.kubernetes.io/name: chaos-mesh
        app.kubernetes.io/instance: chaos-mesh
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/part-of: chaos-mesh
        app.kubernetes.io/version: 2.6.2
        app.kubernetes.io/component: chaos-dns-server
    spec:
      serviceAccountName: chaos-dns-server
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values: ["chaos-dns"]
              topologyKey: kubernetes.io/hostname
      priorityClassName: 
      containers:
      - name: chaos-dns-server
        image: ghcr.io/chaos-mesh/chaos-coredns:v0.2.6
        imagePullPolicy: IfNotPresent
        resources:
          limits: {}
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/chaos-dns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/chaos-dns
          readOnly: true
        ports:
        - containerPort: 5353
          name: dns
          protocol: UDP
        - containerPort: 5353
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        - containerPort: 9288
          name: grpc
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - all
          readOnlyRootFilesystem: true
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: dns-server-config
            items:
            - key: Corefile
              path: Corefile
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/chaos-daemon-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/chaos-dashboard-pvc.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/ingress.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-configmap.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-deployment.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-rbac.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/prometheus-service.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/secrets-configuration.yaml
# Copyright 2021 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-mesh-ca
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-mesh-ca
spec:
  duration: 43800h0m0s #5year
  secretName: chaos-mesh-ca
  commonName: "chaos-mesh-ca"
  isCA: true
  issuerRef:
    name: chaos-mesh-selfsigned
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-mesh-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-mesh-cert
spec:
  duration: 43800h #5year
  dnsNames:
    - chaos-mesh-controller-manager
    - chaos-mesh-controller-manager.chaos-mesh
    - chaos-mesh-controller-manager.chaos-mesh.svc
  isCA: false
  secretName: chaos-mesh-webhook-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-daemon-client-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-daemon-client-cert
spec:
  duration: 43800h0m0s #5year
  dnsNames:
    - controller-manager.chaos-mesh.org
  isCA: false
  secretName: chaos-mesh-daemon-client-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: chaos-daemon-cert
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-daemontcert
spec:
  duration: 43800h0m0s #5year
  dnsNames:
    - chaos-daemon.chaos-mesh.org
  isCA: false
  secretName: chaos-mesh-daemon-certs
  issuerRef:
    name: chaos-mesh-ca
  privateKey:
    rotationPolicy: Never
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: chaos-mesh-selfsigned
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-mesh-selfsigned
spec:
  selfSigned: {}
---
# Source: chaos-mesh/templates/cert-manager-certs.yaml
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: chaos-mesh-ca
  namespace: "chaos-mesh"
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: chaos-mesh-ca
spec:
  ca:
    secretName: chaos-mesh-ca
---
# Source: chaos-mesh/templates/mutating-admission-webhooks.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: chaos-mesh-mutation
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-podchaos
    failurePolicy: Fail
    name: mpodchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - podchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-iochaos
    failurePolicy: Fail
    name: miochaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - iochaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-timechaos
    failurePolicy: Fail
    name: mtimechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - timechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-networkchaos
    failurePolicy: Fail
    name: mnetworkchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - networkchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-kernelchaos
    failurePolicy: Fail
    name: mkernelchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - kernelchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-stresschaos
    failurePolicy: Fail
    name: mstresschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - stresschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-awschaos
    failurePolicy: Fail
    name: mawschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - awschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-azurechaos
    failurePolicy: Fail
    name: mazurechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - azurechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-gcpchaos
    failurePolicy: Fail
    name: mgcpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - gcpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-dnschaos
    failurePolicy: Fail
    name: mdnschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - dnschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-jvmchaos
    failurePolicy: Fail
    name: mjvmchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jvmchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-schedule
    failurePolicy: Fail
    name: mschedule.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schedules
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-workflow
    failurePolicy: Fail
    name: mworkflow.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workflows
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-httpchaos
    failurePolicy: Fail
    name: mhttpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - httpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-blockchaos
    failurePolicy: Fail
    name: mblockchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - blockchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-physicalmachinechaos
    failurePolicy: Fail
    name: mphysicalmachinechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachinechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-physicalmachine
    failurePolicy: Fail
    name: mphysicalmachine.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachines
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-statuscheck
    failurePolicy: Fail
    name: mstatuscheck.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statuschecks
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /mutate-chaos-mesh-org-v1alpha1-remotecluster
    failurePolicy: Fail
    name: mremotecluster.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - remotecluster
---
# Source: chaos-mesh/templates/validating-admission-webhooks.yaml
# Copyright 2022 Chaos Mesh Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: chaos-mesh-validation
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-podchaos
    failurePolicy: Fail
    name: vpodchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - podchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-iochaos
    failurePolicy: Fail
    name: viochaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - iochaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-timechaos
    failurePolicy: Fail
    name: vtimechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - timechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-networkchaos
    failurePolicy: Fail
    name: vnetworkchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - networkchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-kernelchaos
    failurePolicy: Fail
    name: vkernelchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - kernelchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-stresschaos
    failurePolicy: Fail
    name: vstresschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - stresschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-awschaos
    failurePolicy: Fail
    name: vawschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - awschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-azurechaos
    failurePolicy: Fail
    name: vazurechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - azurechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-gcpchaos
    failurePolicy: Fail
    name: vgcpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - gcpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-dnschaos
    failurePolicy: Fail
    name: vdnschaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - dnschaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-jvmchaos
    failurePolicy: Fail
    name: vjvmchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - jvmchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-schedule
    failurePolicy: Fail
    name: vschedule.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - schedules
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-workflow
    failurePolicy: Fail
    name: vworkflow.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - workflows
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-httpchaos
    failurePolicy: Fail
    name: vhttpchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - httpchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-blockchaos
    failurePolicy: Fail
    name: vblockchaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - blockchaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-physicalmachinechaos
    failurePolicy: Fail
    name: vphysicalmachinechaos.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachinechaos
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-physicalmachine
    failurePolicy: Fail
    name: vphysicalmachine.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - physicalmachines
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-statuscheck
    failurePolicy: Fail
    name: vstatuscheck.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - statuschecks
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-chaos-mesh-org-v1alpha1-remotecluster
    failurePolicy: Fail
    name: vremotecluster.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - remotecluster
---
# Source: chaos-mesh/templates/validating-admission-webhooks.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: chaos-mesh-validation-auth
  labels:
    helm.sh/chart: chaos-mesh-2.6.2
    app.kubernetes.io/name: chaos-mesh
    app.kubernetes.io/instance: chaos-mesh
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: chaos-mesh
    app.kubernetes.io/version: 2.6.2
    app.kubernetes.io/component: admission-webhook
  annotations:
    cert-manager.io/inject-ca-from: "chaos-mesh/chaos-mesh-cert"
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: chaos-mesh-controller-manager
        namespace: "chaos-mesh"
        path: /validate-auth
    failurePolicy: Fail
    name: vauth.kb.io
    timeoutSeconds: 5
    sideEffects: None
    admissionReviewVersions: ["v1", "v1beta1"]
    rules:
      - apiGroups:
          - chaos-mesh.org
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources: [ "*" ]
