---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpSR3VnUEttdTI5d2NBTUNZVGxRZ3N3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13T1RBM01UVXhNRE15V2hjTk1qUXdPVEEyTVRVeE1ETXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU4wd0s0YjNZaDVmUFJicFcxa0ZEL3kxZ2g5S0lCU3luT2FheGloL3dYTWJJZnNyZDlzdgpNSGxEM0dHUXJSMTZmblpacFBqSlhzNzh2dUpCUmhHSGRMaWN4aFovOVZwWGtNUWsrMUprMDM2WS9UZ0UxNSt3CmQ3L1VNbkJGcGM5U1lRQTJoemtVeSt5aGZ6YzRXbTZDYmwxZVVJSVJjRGNtZm1mL3dvQk14RmVKYXByZGhldjUKSDlvVVozWXlxZG1MUVEvTkp1Z1hRY0czSTdZVEJEMUNCSmo2aHJ5SjFwemI2TVU0dWpFSWFKL3U1cXdDUGU4VApvTlFQbDhaVExEbmJtcldIL0x2MnBUeVZVVXByOHd4QThCNTc0ZzFqbXgrNlBXRnIvcGdzS0ZDWHh1eW5qSXJjCmVhRWc1dkpVNXVaczNxdVp4SWNxdHNTdDVPVmlLQXl4cWVjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHp2MFU5U0dpdWVGVkdBMFJKay8wMzBkYWtpdmhJWWxLSkJldFlFOWQKRDFUV2IvY2JNcVI1ODRxQ2NoZUI5VmpSRnBSTnBzTHBTck9tNHRyaVFTOUNTSnpETzFIS1RobEtBb0xabVY2QgpWcXRTS2dyVUtmcUQzTUVmdklnVVVCa21KdUJxclBsTmhQcWtkWWVGaWYrUHJodUdrWjhUOW1rd3lIRzlMQlprCmMrQ1hDemlFajhNQkYrYlptUXZSa3B4VmhBUUZNWDFMbXI1Q1F1LzZBUnY5Rng3Z2lIYmtXNnh2Y3FvazNqWWwKNklmM0ZvZ0s5VzVkTWlSS2pPMTVPREdKc1ova2xTNXVHN3VPK2RMYTJNaHVjK2dnMTQvbjd2VnhDa0pTekRVNApRWktCcjRoNUE3ODdGWjA3OUJ0TFMwL0lzd2JPbEtYQjVLNys5dEV5d3A1ZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM1RBcmh2ZGlIbDg5RnVsYldRVVAvTFdDSDBvZ0ZMS2M1cHJHS0gvQmN4c2greXQzCjJ5OHdlVVBjWVpDdEhYcCtkbG1rK01sZXp2eSs0a0ZHRVlkMHVKekdGbi8xV2xlUXhDVDdVbVRUZnBqOU9BVFgKbjdCM3Y5UXljRVdsejFKaEFEYUhPUlRMN0tGL056aGFib0p1WFY1UWdoRndOeVorWi8vQ2dFekVWNGxxbXQyRgo2L2tmMmhSbmRqS3AyWXRCRDgwbTZCZEJ3YmNqdGhNRVBVSUVtUHFHdkluV25Odm94VGk2TVFob24rN21yQUk5Cjd4T2cxQStYeGxNc09kdWF0WWY4dS9hbFBKVlJTbXZ6REVEd0hudmlEV09iSDdvOVlXdittQ3dvVUpmRzdLZU0KaXR4NW9TRG04bFRtNW16ZXE1bkVoeXEyeEszazVXSW9ETEdwNXdJREFRQUJBb0lCQUFuSXZyUXFyMEZ1cnhJYgpZbm9PbWtWd2RnQVNWRmIyQzdDN3VmWkNxSGtDQXovTURYSTVwU2hJRXpDUnFNYThDMm9Lenh4ZU0vNXQrYmVpCmNZb0c5dWZQcjRlQlE0WXFoM0hWdlBSSkYzM3JJSkJnem5UMjVtVXE2c3hDbUhJU1Q4NGxtMWV3RHRFNTE1bkcKdVdGWURhKzlvMHdObjJ3aEhNaFc3UENsOUsxMmhwdjdma0c2YXEwN01SMlZDK0I3QlJmVDVkbGhKMXI3T2FmMQpVMStYdDM0ZFdFa2xhdlYwQ3o3Rys4alUzSFRnVGxqSmZqUk1ta1EwRGl5clhyQjZHVFRXTERYb1RITkxPTzZaCnJ3Y1pRQ2RKaUtxWW5xazNJN2ZQdnhXRDN0aVVKSXFrTndUQUt2NStnUExjWkVKZUwyYWh3YkhZK0Zzd2dndWIKeG9tZCtIRUNnWUVBOVEwbTB6NTAxOEEvYkN5aC9IR243K3BkL2hHNHRPRWp3MDFyWG12U1FuL2grbWxlNmxGcQpVdE1kK0UvVGQ3ZDdjMEkxYUdvRysvU1RpZDgzOEU5MEdmVVluZWlHVm1UVGZUVHoyWXBlRDRLYnFPL3JNRnJ5Ck96ZXlhWDBVaHA5ZW1DNGFqcTcrb3Z6eWtDR200aHVMOXV1YmNXMVorUmlQNWNBTjJIcmQvZjhDZ1lFQTV4SVQKWmdJa25ETVpZMnVqRjhTMC9tcXF5M2tlSEMrOE5NVHZ3OExicVRYbDZjeERCWGt2cGNTeDQxMDRYQXY0bU5qUQp1R1doSUJQU1ltK3JEYWdhNFlxSTR3TnVyOWJRamovTlFvQXZFRDh1amczbk9BSFJqU2xVcUZWZzVOcU5QVlY4CjNKSUdxSk5GUW5qMko0U2l3Zzh3dC90S2YxQmhBQnRkMWNLMEpCa0NnWUE3SnkyVUdLT0Q0VGh1R0dnUjFDM0IKMEVWWUsxYjI4dEg3TnhrUDlkOFBobWM2VjIwK0N1RXJsU0xLNmhvVjhBaXd6ZTZ1Z2NtbDBHZzlBOUV4QlR6MQpkeUMySFljd0c2Nmhyc0tlWkxSSDhqTTVHSkVoWHhMU0VLUFVxd2psWmxzalNSM0lDNTRVSWhNN2o2UUZPTGtVCnBkTWtFazJCdjlnY2tidkY0Z0xzYVFLQmdRREM4dUVpNHhQNEpMUjZ5TWtrdUhUcllSc1A1L09iWERxeFdxWGUKeDN1RDIxRktXMmNBS3lvajlUc1AxQXBFdm1UU3I3b0ltTlhEdG5WOVR6RkZxRnBsaHZmT2I0cm5GNW1GS2hjRwowQmJrNGlsbytCbm5pc0U5RTIyMVI3TWo0YS9mMjB3bzI1cDZoeVdiMjJueUZWa3IySjBGM0NFU0lNSjEwS0R1ClJBS3ZvUUtCZ1FDL2R4YU5yZCtSbG5rYTBrTEFtMGpSVkQ1M2ZWeDVGcnZTM2xrZTBIQkoxZXFhNDRLREo4S3QKQnF2clVJRE1sVTJuaGV2cG5KNmJKTlRxT2l2SkZWWEIvdmdHZHlUN3k3ekk5Tnc5OEVldnFObkt0cEZzcUdOcwpMVHFCMEVZZjM1MkhJR095ZE5md2FjWkpyUXJteCswTE5HVlNtWlJmZVQrLy9WOFg2TFJjY2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRT2dXdjY2aFh5U21OSXhyWXJvS3ZXREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd09UQTNNVFV4TURNeVdoY05NalF3T1RBMk1UVXhNRE15V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREZU9zUTZ1a3ZsYWF0bUlvTDJEUkxDQ2R1Ly9maDZKcFl2cUJQb29IUAovK3FSbWRaTmVoVERzYVlnbVlmZWNsY21SMUpwcnM0dHVxVVdLK1hYTm91Y3BCRHBHRng1ZDFQTzR2U1FGeFZtCnhsT2EwcWZPWGlTUkJEVm1tWGlaZFZvMkdUanZub3FWQ252L05FYmlsUlU0bUVpbHJuVkVzUTJ6T2lqR1B3NVoKcXdGeEVBZjhsYTU1eEZGby9iWlU0bnZPZ0tFUlVtSkFTUlhVSlpZYVRhYUloNjl3N0w5RWppbEZxbG5oT2tYMwoxVzJRRXdBWUdNZDFOR3VHbDhDTkJwZVRZTTFDOC9hZmtYS2d2WkFTQ1JWZGhOMVRqSjZWU1lna1ZEWVIzZHRuCndVTDV3YXJnTW1CUGZxdWRoLzlyK1JVYktxR2txOHJUODcvOHZ2QlQyL2UxQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMWitJNytlVGFycmRlcjNacTUwODIrcE5ZMHYKS1ZRSzZ1eDdQcklNQjFIYm5qRmxkMHRuVENCRWxKcjNlYTh0eDhTL2NrMEQ1am91NFE0VEpzeVdlK21xWFlHUwozKy9tdHpUYkMvbXg5SGRlMWg0a1MrYkFvL2pRcUM1dE5aYUE0bWUzL0NwWkswdkVLVUltSmRrczRxbG9PcFB5CitaVmhLSlNyM0F3YWZzajJNc2tMQi9wVVV6UFdDRVl2Qnpud0I2NjMwWVJWNDAwbG9VdUMwVGpxUGlxN1hmZDQKdFRJbytXVWN0bUlZMUJaV0xsTURLcVZ5Ti9IUXVIV1FJVms2UlNvdGtDcUd6K21UTCtFYVUyOWtpYy94MUNkdQozWkE4L2lESDJ0U0dTSzU0OTkzS2hHa0pBUnFVTUlBTUhxRC93Z2FsWHpNU3dza0czSHh3czQ3SEc3TT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdzNqckVPcnBMNVdtclppS0M5ZzBTd2duYnYvMzRlaWFXTDZnVDZLQnovL3FrWm5XClRYb1V3N0dtSUptSDNuSlhKa2RTYWE3T0xicWxGaXZsMXphTG5LUVE2UmhjZVhkVHp1TDBrQmNWWnNaVG10S24Kemw0a2tRUTFacGw0bVhWYU5oazQ3NTZLbFFwNy96Ukc0cFVWT0poSXBhNTFSTEVOc3pvb3hqOE9XYXNCY1JBSAovSld1ZWNSUmFQMjJWT0o3em9DaEVWSmlRRWtWMUNXV0drMm1pSWV2Y095L1JJNHBSYXBaNFRwRjk5VnRrQk1BCkdCakhkVFJyaHBmQWpRYVhrMkROUXZQMm41RnlvTDJRRWdrVlhZVGRVNHllbFVtSUpGUTJFZDNiWjhGQytjR3EKNERKZ1QzNnJuWWYvYS9rVkd5cWhwS3ZLMC9PLy9MN3dVOXYzdFFJREFRQUJBb0lCQURMZVlkWDZQQXJkR0E0dgpGeVd6OHcvZnBGdDNrMnVmMjZMaW9OZDRnKzI4UEsvOVo4NnJ5WUdQMXBxL09hT0MvL2ovTUl3K0tIdXdDY3cyClNrN3lhK3lzcVpYdmVBbElLM0E0a2NwNXAyRWlsWmxCM3RlT21sZCt6K0xPWjVzUDloVUVCVlFlWHhRZ01WcWQKb1NEUUNVQzhLSk90VGVrOVprSlJEVkZpRVhyMTE0amJCZVdRRkZZK0dINkxNQTJLVEZqTmpLcEpQU0U4T2kxcwo1Y09yVzIxL1pvQTFmQ1lCQ2dwRkkzN2djM1dXdFNLTGpmTUFjdlJXZWsvbmRlREFRMkJIUEFlRWxwcjk3c1RjClNIaGdSMlF0dkhSZkFYU2tTRVRWR1Jyd3VmOE9IWm1BclhEZENDNW5uNHVYMklYOTNhNXpENVRubTdwbUd1WnkKQTY4RE1oVUNnWUVBeVNmaVduN3lSYUl1aWx3ckVTbk5HNlI0NnJpSmFucHF2QUdKOXZxSEoxb3R6WnVudE1XVQpmMXZMd3NOb0l0SjJITVFUVkVMWlZLMlZ2UlpyWEZxQzhOSDcyNlMxb1lLc0JZNURHWHhSZ2dTMUtKZW5jc2g5CnVFWHRNZjZISEFyZU1sSXNOZy90TXBLY2RJS3RmMUVBWDZTYjlLbFVtWWt3aDF2eHUrREJJSDhDZ1lFQStNUlkKSVdRbXVJYmFkK3ZoVFI5SHVNU3EyZzhHcXphbWVmclphbjFZOXlrR2FQM0lXR3dEdEhZTU1lckZrWk5zMEdGYgpBRkZCczFlVHAzUGlaT0oyWVdLSkNmUVh5TVh5M1NSVEpYbDR0MUhVWlFyNk0veGg4aXBkSTkzZjlRN05TbFJzClBTMXF0Q0lWOU5UVEpNVTJTU3lpdXB5VDlhZjZreFl5dDZPUFRjc0NnWUVBc1NOZVFUTHBSa2k3a3p2MjhQWk8KbUxrTmdpVmZYVlRRQ1IrUnp0eHZpRWZ4YmM1VXNPd05DTnBkWlBXUERwc25SODJpOStDbVlkczZzWGk4c21kQwpSNitpaXBsUkdSbHBRcnMwZTR6dWVnQ0xSMlBGSVY5TTFxazlaM2tzb1pVd2RqL0dqeFVYWENHZmhUcE9ibjkyClJNTkFVd09LYkdwVFFkL0YwQnpyOVNFQ2dZQUdyemZ6QmI3b25HOElZK1UwN2s4K0RzTE1nelRacXVsRVE5Sk4Kd3pwOXdiTnpaTVphWWVTamw3eHlKdTNTSUpUKzhHN0NqbXhtaGtib2EvdThYRDEwRm5LNk9yM2MzanpOWm1sNQppMDhNRmYzUURVQjEzeVUrblpiTkhPd2txSllwbGlVbWE2Ny9VaDhtNmdVV2F0b3ZreXg0T1RiY2xmdnNzZDhCCkFqc2Fpd0tCZ1FDem1kd1p6ZFhDTERhUlM1eGc3eGZzakpXQnovMXo4V0VnVGE0eUFWRVVXeEtCNXhxUlBjTmQKem1SUTlycjRnaEVWSE9VeFV5TWdEZFdhcFJhU2NlUFczclNMd1RCVU1zMm9TQTJ5dUc3eng2UGUxMXNGenBpUApyWldnVG8zbVBRS09DLzhEaStCMkxTeDkvV1MzdTZEaVY1bjlzQlJGY3BIVE9GNnJXaHFKdnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZW5rRE1za0dTbUpWQ0EzZzdEblNLakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURrd056RTFNVEF6TWxvWERUSTBNRGt3TmpFMU1UQXpNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOaVppeUh0NnNDOEpsQm9rTlV1TUx4VWcxWTBjOTBVRHlzOWNEWUh0QkVHZWtaUQo0d0JPcjRiOExoSTJRdTROQVA5TFlHeFlxS2dyd2ZTMHRETEcyNzltU1p1REh1aWNRbE5MWUpTYUREZ1hRQ3A2ClJqc2RoR3BwQzgzVjJpdVBITGVEWXBGS01SenhWNjBsTDJ5d0N3bVoycmpkLzdGdVI2TURnN2RRd3A3bEtlVisKZFRjTTNQeS9mRENTZUhVdWZrWWpoRzhjei9hNEVPaTRHUWJ0TWtsT2paRUp4ellFZ2o1TTQ4UE1sa09UL1ZHNwpVUUdWaFZiMXBIMTlabldYanlnVWh6RUMxVzhxQVY0a3IzRlk1RG1zbW5YUExiVDExQ0VOWmpZd0VNaWdmeU94CnhDSDd2ckJSc0tzd2tpUWROeDNCUEFuY0h0TmYxZXdqeVBKanNSMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSThtYnBSaHFlVWNRNS9LWnRjdWZVZi9kT0tvTHFyQ3ZIVE8KUUEvQ2xwKzBmb3BIbDYxdXBVNElna2tpalRrZzE2eUp5bzNzNUpMbUp0VHNWYlRJUjZhQjlwaWhJMUhwR3hNMApEMG9VaFhhQVhNMEcwc0g1SjVRdkk2MUJLQVlSZFpEb1MwUWZONGllQjNWSXBRcVJFbFJjVkZDbDVPWnBtUkdlCmVoclpOVmZwSXE4QjIyUkVQOGN2MVZ1bXBjQ0NkUm52azdMVWIxZU8yMGtjTklXZnhWOGIxWXN0N3VPL2ZEdnQKRzdPV1MxU0tRR0Y3Nzl6K1RmR1RPOHFtVGFvUCtJZlZrWktiWFNRaGE5MHFxMkZJaU9xT3lwK1ZhTjRoZE5IeQpDNmVVc3pobERoSEM1VlZzM1ZaWkpuQjYwSkNNdmlGZ0dHS2lJcUdSK0N1TFBZK3AwTVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMkptTEllM3F3THdtVUdpUTFTNHd2RlNEVmpSejNSUVBLejF3TmdlMEVRWjZSbERqCkFFNnZodnd1RWpaQzdnMEEvMHRnYkZpb3FDdkI5TFMwTXNiYnYyWkptNE1lNkp4Q1UwdGdsSm9NT0JkQUtucEcKT3gyRWFta0x6ZFhhSzQ4Y3Q0TmlrVW94SFBGWHJTVXZiTEFMQ1puYXVOMy9zVzVIb3dPRHQxRENudVVwNVg1MQpOd3pjL0w5OE1KSjRkUzUrUmlPRWJ4elA5cmdRNkxnWkJ1MHlTVTZOa1FuSE5nU0NQa3pqdzh5V1E1UDlVYnRSCkFaV0ZWdldrZlgxbWRaZVBLQlNITVFMVmJ5b0JYaVN2Y1Zqa09heWFkYzh0dFBYVUlRMW1OakFReUtCL0k3SEUKSWZ1K3NGR3dxekNTSkIwM0hjRThDZHdlMDEvVjdDUEk4bU94SFFJREFRQUJBb0lCQUFvMll4cjhicjhibityVwpvMDJKMmY1bk5iSVEwdzJ2Ym0rcGUrcndQZ3MzZFBodncrUTEwWXpad3dwVXlKOFV1ZUZQbW9KQlErSjUvYkVkCi9Ba1EyemVSQ1JOdUFUMFNjUVlnWGJOaitBT0ZCUjk3bUdnZElpc3FQTVk5dVFXb3Y3L2ZUL3h0dFJjYVFmb0YKOE5COUZHZ2xldXlRZXdmUW5Vd1FWRnVHVVViUWpRUlVpeXdDdi9vTkFGVDk4MkE0NUJwL0phelNlQTFFTGVMYgpwUUJnRmg0bXBTSFZlZk1zTWNJVUFZM0E5RlloMGt2ZGtEZU1lY2t2SEJYQzROS1RzVitkQVI3T1hWYmpSb0xkCnZTS040NEM3UC9id2dNUi9yNUxWb0lHUDk2SjRXVU9WMXVGNWREL3dFQ0pGVkRDaUVRZUpYM2EzRTJVMWQyZUQKVVFpOGRYa0NnWUVBK2cxT0ZIVjVEUXRYZEs1cmUzUkgycGhDTU5VU3piWEM2WW1yTHF4RjJOMmNGd2dVUko4UgpmSG9BYndsZXlqMXlYTFdNMFdpYXp1dTRLSDBJMTFLQ0NIVWFYVWttbnhTQU9ZVVRMSjVQQVVBV0FLZ1BtMDlkCmY2c2pxNFVrTzIxaFNBOUlXM3h2K1V4UEhxTFNoYmVURjNPVzVOL0o3MWJOcVlNY0kvK2FDcHNDZ1lFQTNjQ0gKNkJWdENsNEZrd1phcDZmbWNscEVFU2tGeTBQQlhIbEU3cWthZDQ3QzdTSXRYaFV5a3BYc1lnWkdoUVFoUXErKwowQWlaMWUzbVk1S0U2aVl3aWVlakhOVFpEVkxURnJVWGVkbytrcm9RZnNlVUx3L2tpME5HdlQ2QzNwbGlYVnhsCjQvc3UxcXhrcUFybHR4Z0RjT04yZWtqWWc2THc1cEk2ZDdXRnNxY0NnWUFpQnFsM1V6enpyM1ZwSlVydTg3WEwKWXlpdXFHLzBtaVU1emtnREErSkZUbkt0RjZaYWFDTGpBMThIdlFpdkVJbDlZQjhYWjlxWkNhNTNvL3dPQU9ZOAo3R0o0Q3pvOEwzZjdXOFp1TGVTbVVPZ3RrckQ4KzJISHU2d1E3UDh2THdVcjN4aURpbjFhT1M0VEJ5a0tsUjVvCjlJdTEvVlhuUWJLZXZINlp6M0JRdlFLQmdRRFdTb3dMZDBrY1Q2ZkxZTVNTWitxR2J6eC82TWkwbVJGdXI3SXgKZ0RFWGdGcFdsa1NKT3FyWWhSRWQyVHFrcUUwTUNKRzRyOWNacVFDUEVMUnBJZWFlSGI2K3llSEd3bGREQmxWZApaODQ0Tko1a0piSEptTzRldGpEU0NHcW5la3BZTmtZd2ZqZlJORjlCRk9iUWZPQTJZMW5HNmtaeFR6REZZR0luCjlMN3kyUUtCZ1FEdjJQdFFJY3hTWHJBcnFxMGZraGIyWWd1SVVIVEZGTW9pTVc4anQ1WGVlb0xha1VyMVN3NEUKQzVVT2pIRWZ0ZmFkTE1ORm5oRG1Tald6Slh6RVlyUW1lbnNvWUlzTFJDS3pmcUlCWnMwUVo4SENxU1VUZHcyWApCT3dVRG1DcnpuWGRkM0t0VmYrMldIZkZkbHJBaFpnK1RnU3VmcmRaKzZRSDFlZW1XeTIvMUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: linkerd-control-plane/templates/config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    commonLabels: {}
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: ""
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePSP: false
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    enablePprof: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: kubernetes.io/tls
        tls:
          crtPEM: ""
      serviceAccountTokenProjection: true
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBjzCCATSgAwIBAgIRALsxqIr0GNMfOcWUYgWRhF4wCgYIKoZIzj0EAwIwJTEj
      MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjMwOTA3MTUw
      MjA0WhcNMzMwOTA0MTUwMjA0WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
      c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAhPY2PcNYlR7qi3
      JU9e5SyYjfcU9TF4ODKM54iHg5KLslZxIfFQwntlxu0P0/1ClR59Hfn0YjbvL1+s
      tT0dH1WjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
      A1UdDgQWBBT0zVOrUnTVr48791RPcPlwTtZLvzAKBggqhkjOPQQDAgNJADBGAiEA
      5VkuXxlr2Sn6mp8/nm31q99mmwkCygslAdKU7wMlsE0CIQCF94JqjP0As7k3ruoV
      +iaWuOHajoo9nDSTfKCyaQEogw==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.14.0
    networkValidator:
      connectAddr: 1.1.1.1:20001
      enableSecurityContext: true
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    proxy:
      await: true
      cores: 0
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyInit:
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
      objectSelector:
        matchExpressions:
        - key: linkerd.io/control-plane-component
          operator: DoesNotExist
        - key: linkerd.io/cni-resource
          operator: DoesNotExist
    runtimeClassName: ""
    webhookFailurePolicy: Ignore
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBjzCCATSgAwIBAgIRALsxqIr0GNMfOcWUYgWRhF4wCgYIKoZIzj0EAwIwJTEj
    MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjMwOTA3MTUw
    MjA0WhcNMzMwOTA0MTUwMjA0WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
    c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAhPY2PcNYlR7qi3
    JU9e5SyYjfcU9TF4ODKM54iHg5KLslZxIfFQwntlxu0P0/1ClR59Hfn0YjbvL1+s
    tT0dH1WjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
    A1UdDgQWBBT0zVOrUnTVr48791RPcPlwTtZLvzAKBggqhkjOPQQDAgNJADBGAiEA
    5VkuXxlr2Sn6mp8/nm31q99mmwkCygslAdKU7wMlsE0CIQCF94JqjP0As7k3ruoV
    +iaWuOHajoo9nDSTfKCyaQEogw==
    -----END CERTIFICATE-----
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
# Source: linkerd-control-plane/templates/config-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/destination.yaml
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: linkerd-control-plane/templates/proxy-injector.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
# Source: linkerd-control-plane/templates/destination.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/helm-release-version: "1"
        linkerd.io/created-by: linkerd/helm stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: c08708aaa8693c3ec136f0176ca0b54a3b732e6277ec1a6d5eb7207d3e0d6094
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/identity.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/helm stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: c08708aaa8693c3ec136f0176ca0b54a3b732e6277ec1a6d5eb7207d3e0d6094
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=kubernetes.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/proxy-injector.yaml
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/helm-release-version: "1"
        linkerd.io/created-by: linkerd/helm stable-2.14.0
        linkerd.io/proxy-version: stable-2.14.0
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: c08708aaa8693c3ec136f0176ca0b54a3b732e6277ec1a6d5eb7207d3e0d6094
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.14.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/heartbeat.yaml
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.14.0
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm stable-2.14.0
spec:
  concurrencyPolicy: Replace
  schedule: "20 15 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/helm stable-2.14.0
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.14.0
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
# Source: linkerd-control-plane/templates/identity.yaml
###
### Identity Controller Service
###
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    matchExpressions:
    - key: linkerd.io/control-plane-component
      operator: DoesNotExist
    - key: linkerd.io/cni-resource
      operator: DoesNotExist
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZW5rRE1za0dTbUpWQ0EzZzdEblNLakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURrd056RTFNVEF6TWxvWERUSTBNRGt3TmpFMU1UQXpNbG93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFOaVppeUh0NnNDOEpsQm9rTlV1TUx4VWcxWTBjOTBVRHlzOWNEWUh0QkVHZWtaUQo0d0JPcjRiOExoSTJRdTROQVA5TFlHeFlxS2dyd2ZTMHRETEcyNzltU1p1REh1aWNRbE5MWUpTYUREZ1hRQ3A2ClJqc2RoR3BwQzgzVjJpdVBITGVEWXBGS01SenhWNjBsTDJ5d0N3bVoycmpkLzdGdVI2TURnN2RRd3A3bEtlVisKZFRjTTNQeS9mRENTZUhVdWZrWWpoRzhjei9hNEVPaTRHUWJ0TWtsT2paRUp4ellFZ2o1TTQ4UE1sa09UL1ZHNwpVUUdWaFZiMXBIMTlabldYanlnVWh6RUMxVzhxQVY0a3IzRlk1RG1zbW5YUExiVDExQ0VOWmpZd0VNaWdmeU94CnhDSDd2ckJSc0tzd2tpUWROeDNCUEFuY0h0TmYxZXdqeVBKanNSMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSThtYnBSaHFlVWNRNS9LWnRjdWZVZi9kT0tvTHFyQ3ZIVE8KUUEvQ2xwKzBmb3BIbDYxdXBVNElna2tpalRrZzE2eUp5bzNzNUpMbUp0VHNWYlRJUjZhQjlwaWhJMUhwR3hNMApEMG9VaFhhQVhNMEcwc0g1SjVRdkk2MUJLQVlSZFpEb1MwUWZONGllQjNWSXBRcVJFbFJjVkZDbDVPWnBtUkdlCmVoclpOVmZwSXE4QjIyUkVQOGN2MVZ1bXBjQ0NkUm52azdMVWIxZU8yMGtjTklXZnhWOGIxWXN0N3VPL2ZEdnQKRzdPV1MxU0tRR0Y3Nzl6K1RmR1RPOHFtVGFvUCtJZlZrWktiWFNRaGE5MHFxMkZJaU9xT3lwK1ZhTjRoZE5IeQpDNmVVc3pobERoSEM1VlZzM1ZaWkpuQjYwSkNNdmlGZ0dHS2lJcUdSK0N1TFBZK3AwTVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUpSR3VnUEttdTI5d2NBTUNZVGxRZ3N3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13T1RBM01UVXhNRE15V2hjTk1qUXdPVEEyTVRVeE1ETXlXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU4wd0s0YjNZaDVmUFJicFcxa0ZEL3kxZ2g5S0lCU3luT2FheGloL3dYTWJJZnNyZDlzdgpNSGxEM0dHUXJSMTZmblpacFBqSlhzNzh2dUpCUmhHSGRMaWN4aFovOVZwWGtNUWsrMUprMDM2WS9UZ0UxNSt3CmQ3L1VNbkJGcGM5U1lRQTJoemtVeSt5aGZ6YzRXbTZDYmwxZVVJSVJjRGNtZm1mL3dvQk14RmVKYXByZGhldjUKSDlvVVozWXlxZG1MUVEvTkp1Z1hRY0czSTdZVEJEMUNCSmo2aHJ5SjFwemI2TVU0dWpFSWFKL3U1cXdDUGU4VApvTlFQbDhaVExEbmJtcldIL0x2MnBUeVZVVXByOHd4QThCNTc0ZzFqbXgrNlBXRnIvcGdzS0ZDWHh1eW5qSXJjCmVhRWc1dkpVNXVaczNxdVp4SWNxdHNTdDVPVmlLQXl4cWVjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDWHp2MFU5U0dpdWVGVkdBMFJKay8wMzBkYWtpdmhJWWxLSkJldFlFOWQKRDFUV2IvY2JNcVI1ODRxQ2NoZUI5VmpSRnBSTnBzTHBTck9tNHRyaVFTOUNTSnpETzFIS1RobEtBb0xabVY2QgpWcXRTS2dyVUtmcUQzTUVmdklnVVVCa21KdUJxclBsTmhQcWtkWWVGaWYrUHJodUdrWjhUOW1rd3lIRzlMQlprCmMrQ1hDemlFajhNQkYrYlptUXZSa3B4VmhBUUZNWDFMbXI1Q1F1LzZBUnY5Rng3Z2lIYmtXNnh2Y3FvazNqWWwKNklmM0ZvZ0s5VzVkTWlSS2pPMTVPREdKc1ova2xTNXVHN3VPK2RMYTJNaHVjK2dnMTQvbjd2VnhDa0pTekRVNApRWktCcjRoNUE3ODdGWjA3OUJ0TFMwL0lzd2JPbEtYQjVLNys5dEV5d3A1ZQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRT2dXdjY2aFh5U21OSXhyWXJvS3ZXREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd09UQTNNVFV4TURNeVdoY05NalF3T1RBMk1UVXhNRE15V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUREZU9zUTZ1a3ZsYWF0bUlvTDJEUkxDQ2R1Ly9maDZKcFl2cUJQb29IUAovK3FSbWRaTmVoVERzYVlnbVlmZWNsY21SMUpwcnM0dHVxVVdLK1hYTm91Y3BCRHBHRng1ZDFQTzR2U1FGeFZtCnhsT2EwcWZPWGlTUkJEVm1tWGlaZFZvMkdUanZub3FWQ252L05FYmlsUlU0bUVpbHJuVkVzUTJ6T2lqR1B3NVoKcXdGeEVBZjhsYTU1eEZGby9iWlU0bnZPZ0tFUlVtSkFTUlhVSlpZYVRhYUloNjl3N0w5RWppbEZxbG5oT2tYMwoxVzJRRXdBWUdNZDFOR3VHbDhDTkJwZVRZTTFDOC9hZmtYS2d2WkFTQ1JWZGhOMVRqSjZWU1lna1ZEWVIzZHRuCndVTDV3YXJnTW1CUGZxdWRoLzlyK1JVYktxR2txOHJUODcvOHZ2QlQyL2UxQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFMWitJNytlVGFycmRlcjNacTUwODIrcE5ZMHYKS1ZRSzZ1eDdQcklNQjFIYm5qRmxkMHRuVENCRWxKcjNlYTh0eDhTL2NrMEQ1am91NFE0VEpzeVdlK21xWFlHUwozKy9tdHpUYkMvbXg5SGRlMWg0a1MrYkFvL2pRcUM1dE5aYUE0bWUzL0NwWkswdkVLVUltSmRrczRxbG9PcFB5CitaVmhLSlNyM0F3YWZzajJNc2tMQi9wVVV6UFdDRVl2Qnpud0I2NjMwWVJWNDAwbG9VdUMwVGpxUGlxN1hmZDQKdFRJbytXVWN0bUlZMUJaV0xsTURLcVZ5Ti9IUXVIV1FJVms2UlNvdGtDcUd6K21UTCtFYVUyOWtpYy94MUNkdQozWkE4L2lESDJ0U0dTSzU0OTkzS2hHa0pBUnFVTUlBTUhxRC93Z2FsWHpNU3dza0czSHh3czQ3SEc3TT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
